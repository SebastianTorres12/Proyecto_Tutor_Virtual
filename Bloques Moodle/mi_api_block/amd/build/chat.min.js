define("block_mi_api_block/chat",["jquery"],(function($){const API_tutor="http://localhost:8000/generar",API_BD_TUTOR_BASE="http://localhost:8080/api/",API_Moodle="http://localhost/webservice/rest/server.php";return{init:function(userid,courseid,role){var messagesDiv=$("#chat-messages"),form=$("#chat-form"),chatInput=$("#chat-input"),submitButton=form.find('button[type="submit"]'),isChatBlocked=!1;function verificarIntentosCuestionario(callback){var params={wstoken:"10b97b49ec5c5119e48c566de5228f8f",wsfunction:"gradereport_user_get_grade_items",moodlewsrestformat:"json",courseid:courseid,userid:userid},queryString=$.param(params),fullUrl=`${API_Moodle}?${queryString}`;console.log("URL generada para gradereport_user_get_grade_items:",fullUrl),messagesDiv.append("<p><strong>Debug:</strong> Verificando intentos de cuestionarios...</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight),$.ajax({url:fullUrl,method:"GET",dataType:"json",success:function(data){console.log("Respuesta de gradereport_user_get_grade_items:",data);var actividades=[];if(data.usergrades&&data.usergrades.forEach((user=>{user.gradeitems.forEach((item=>{item.itemname&&item.cmid&&actividades.push({cmid:item.cmid,name:item.itemname})}))})),0===actividades.length)return messagesDiv.append("<p><strong>Debug:</strong> No se encontraron actividades para verificar.</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight),void(callback&&callback());var quizzes=[],promises=actividades.map((actividad=>{var paramsContext={wstoken:"10b97b49ec5c5119e48c566de5228f8f",wsfunction:"core_course_get_course_module",moodlewsrestformat:"json",cmid:actividad.cmid},queryStringContext=$.param(paramsContext),fullUrlContext=`${API_Moodle}?${queryStringContext}`;return $.ajax({url:fullUrlContext,method:"GET",dataType:"json",success:function(contextData){contextData.cm&&"quiz"===contextData.cm.modname&&quizzes.push({quizid:contextData.cm.instance,name:actividad.name})},error:function(xhr,status,error){console.log("Error al obtener datos del módulo:",{xhr:xhr,status:status,error:error})}})}));Promise.all(promises).then((()=>{if(console.log("Cuestionarios encontrados:",quizzes),0===quizzes.length)return messagesDiv.append("<p><strong>Debug:</strong> No se encontraron cuestionarios para verificar.</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight),void(callback&&callback());var attemptPromises=quizzes.map((quiz=>{var paramsAttempts={wstoken:"10b97b49ec5c5119e48c566de5228f8f",wsfunction:"mod_quiz_get_user_attempts",moodlewsrestformat:"json",quizid:quiz.quizid,userid:userid,status:"all",includepreviews:0},queryStringAttempts=$.param(paramsAttempts),fullUrlAttempts=`${API_Moodle}?${queryStringAttempts}`;return console.log("URL generada para mod_quiz_get_user_attempts:",fullUrlAttempts),$.ajax({url:fullUrlAttempts,method:"GET",dataType:"json",success:function(attemptData){(console.log(`Respuesta de mod_quiz_get_user_attempts para quiz ${quiz.quizid}:`,attemptData),attemptData.attempts&&attemptData.attempts.length>0)&&(attemptData.attempts.find((attempt=>"inprogress"===attempt.state))&&(isChatBlocked=!0,messagesDiv.append("<p><strong>Tutor:</strong> No puedes enviar mensajes mientras estás realizando un cuestionario en curso.</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight),chatInput.prop("disabled",!0),submitButton.prop("disabled",!0)))},error:function(xhr,status,error){console.log("Error al obtener intentos del cuestionario:",{xhr:xhr,status:status,error:error})}})}));Promise.all(attemptPromises).then((()=>{isChatBlocked||(messagesDiv.append("<p><strong>Debug:</strong> No se encontraron intentos de cuestionarios en curso.</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight),callback&&callback())})).catch((error=>{console.log("Error al verificar intentos:",error),messagesDiv.append("<p><strong>Tutor:</strong> Error al verificar intentos de cuestionarios: "+error+"</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight),callback&&callback()}))})).catch((error=>{console.log("Error al obtener módulos del curso:",error),messagesDiv.append("<p><strong>Tutor:</strong> Error al verificar actividades: "+error+"</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight),callback&&callback()}))},error:function(xhr,status,error){console.log("Error al obtener actividades:",{xhr:xhr,status:status,error:error}),messagesDiv.append("<p><strong>Tutor:</strong> Error al obtener actividades: "+error+" (Código: "+xhr.status+")</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight),callback&&callback()}})}function obtenerRecomendaciones(){var activityId=new URLSearchParams(window.location.search).get("id")||1;console.log("Valor de activityId:",activityId);var params={wstoken:"10b97b49ec5c5119e48c566de5228f8f",wsfunction:"gradereport_user_get_grade_items",moodlewsrestformat:"json",courseid:courseid,userid:userid},queryString=$.param(params),fullUrl=`${API_Moodle}?${queryString}`;console.log("URL generada para gradereport_user_get_grade_items:",fullUrl),messagesDiv.append("<p><strong>Debug:</strong> Obteniendo calificaciones...</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight),$.ajax({url:fullUrl,method:"GET",dataType:"json",success:function(data){console.log("Respuesta de gradereport_user_get_grade_items:",data);var notas=[];if(!data.usergrades)return console.log("No se encontraron usergrades en la respuesta:",data),messagesDiv.append("<p><strong>Tutor:</strong> No se encontraron calificaciones.</p>"),void messagesDiv.scrollTop(messagesDiv[0].scrollHeight);if(data.usergrades.forEach((user=>{user.gradeitems.forEach((item=>{if(item.itemname){var grade=null!==item.graderaw?item.graderaw:0;grade>0&&notas.push({userid:user.userid,name:user.userfullname,grade:grade,actividad:item.itemname})}}))})),console.log("Notas procesadas (después de filtrar notas > 0):",notas),0===notas.length)return messagesDiv.append("<p><strong>Tutor:</strong> No hay actividades con notas mayores a 0 para analizar.</p>"),void messagesDiv.scrollTop(messagesDiv[0].scrollHeight);messagesDiv.append("<p><strong>Debug:</strong> Enviando calificaciones a la API...</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight),$.ajax({url:API_tutor,method:"POST",data:JSON.stringify({instruccion:'Actúa como un tutor virtual especializado en la enseñanza de Análisis y Diseño de Software. Tu tarea es analizar las calificaciones de un estudiante y generar recomendaciones personalizadas para mejorar su rendimiento en cada actividad. Recibirás una lista de calificaciones en el formato: [{"userid": number, "name": string, "grade": number, "actividad": string}, ...]. Para cada actividad, evalúa la nota (que está en una escala de 0 a 10) y genera una recomendación específica basada en el rendimiento del estudiante. Si la nota es menor a 5, sugiere acciones para mejorar (por ejemplo, revisar conceptos específicos, practicar más ejercicios, o buscar ayuda adicional). Si la nota está entre 5 y 7, sugiere formas de consolidar el aprendizaje (por ejemplo, profundizar en temas específicos o aplicar conceptos en proyectos prácticos). Si la nota es mayor a 7, felicita al estudiante y sugiere cómo puede seguir avanzando (por ejemplo, explorar temas más avanzados o liderar proyectos). Devuelve las recomendaciones en formato JSON con la siguiente estructura: {"recomendaciones": [{"userid": number, "name": string, "nota": number, "actividad": string, "recomendacion": string}, ...]}. Responde en español.',entrada:JSON.stringify(notas),max_nuevos_tokens:5e3}),contentType:"application/json",success:function(response){if(console.log("Respuesta de la API /generar:",response),response.respuesta){var cleanedResponse=response.respuesta.replace(/```json\n/,"").replace(/\n```/,"").trim();console.log("Respuesta limpia:",cleanedResponse);try{var recomendaciones=JSON.parse(cleanedResponse);if(console.log("Recomendaciones parseadas:",recomendaciones),recomendaciones.recomendaciones&&recomendaciones.recomendaciones.length>0){var mensaje=`Hola ${recomendaciones.recomendaciones[0].name}, he analizado tus calificaciones. Aquí tienes algunas recomendaciones para mejorar:<br>`;recomendaciones.recomendaciones.forEach((rec=>{mensaje+=`- En ${rec.actividad}, obtuviste ${rec.nota}: ${rec.recomendacion}<br>`})),messagesDiv.append(`<p><strong>Tutor:</strong> ${mensaje}</p>`),messagesDiv.scrollTop(messagesDiv[0].scrollHeight)}else messagesDiv.append("<p><strong>Tutor:</strong> Error: No se encontraron recomendaciones en la respuesta.</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight)}catch(parseError){console.log("Error al parsear la respuesta:",parseError),messagesDiv.append("<p><strong>Tutor:</strong> Error al parsear las recomendaciones: "+parseError.message+"</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight)}}else messagesDiv.append("<p><strong>Tutor:</strong> Error: Respuesta inválida de la API.</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight)},error:function(xhr,status,error){console.log("Error al obtener recomendaciones:",{xhr:xhr,status:status,error:error}),messagesDiv.append("<p><strong>Tutor:</strong> Error al obtener recomendaciones: "+error+"</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight)}})},error:function(xhr,status,error){console.log("Error al obtener calificaciones:",{xhr:xhr,status:status,error:error}),console.log("Código de estado HTTP:",xhr.status),console.log("Respuesta del servidor:",xhr.responseText),messagesDiv.append("<p><strong>Tutor:</strong> Error al obtener calificaciones: "+error+" (Código: "+xhr.status+")</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight)}})}messagesDiv.append("<p><strong>Debug:</strong> Verificando si el usuario ya está registrado...</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight),$.ajax({url:`${API_BD_TUTOR_BASE}users/${userid}`,method:"GET",dataType:"json",success:function(response){console.log("Usuario encontrado en la API:",response),messagesDiv.append("<p><strong>Debug:</strong> Usuario ya registrado en la API: "+response.username+"</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight);var userRegisteredKey="user_registered_"+userid;localStorage.setItem(userRegisteredKey,"true")},error:function(xhr,status,error){if(404===xhr.status){messagesDiv.append("<p><strong>Debug:</strong> Usuario no encontrado. Procediendo a registrar...</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight);var params={wstoken:"10b97b49ec5c5119e48c566de5228f8f",wsfunction:"gradereport_user_get_grade_items",moodlewsrestformat:"json",courseid:courseid,userid:userid},queryString=$.param(params),fullUrl=`${API_Moodle}?${queryString}`;console.log("URL generada para gradereport_user_get_grade_items (registro):",fullUrl),messagesDiv.append("<p><strong>Debug:</strong> Obteniendo nombre completo del usuario...</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight),$.ajax({url:fullUrl,method:"GET",dataType:"json",success:function(data){console.log("Respuesta de gradereport_user_get_grade_items (registro):",data);var userfullname="Usuario Desconocido";data.usergrades&&data.usergrades.length>0&&(userfullname=data.usergrades[0].userfullname||userfullname),messagesDiv.append("<p><strong>Debug:</strong> Nombre completo del usuario: "+userfullname+"</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight),messagesDiv.append("<p><strong>Debug:</strong> Rol del usuario: "+role+"</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight),$.ajax({url:`${API_BD_TUTOR_BASE}users/register`,method:"POST",data:JSON.stringify({user_id:userid,username:"user_"+userid,role:role,userfullname:userfullname}),contentType:"application/json",success:function(response){console.log("Usuario registrado en la API:",response),messagesDiv.append("<p><strong>Debug:</strong> Usuario registrado en la API.</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight);var userRegisteredKey="user_registered_"+userid;localStorage.setItem(userRegisteredKey,"true")},error:function(xhr,status,error){console.log("Error al registrar usuario:",{xhr:xhr,status:status,error:error}),messagesDiv.append("<p><strong>Debug:</strong> Error al registrar usuario: "+error+"</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight)}})},error:function(xhr,status,error){console.log("Error al obtener nombre completo del usuario:",{xhr:xhr,status:status,error:error}),messagesDiv.append("<p><strong>Debug:</strong> Error al obtener nombre completo del usuario: "+error+"</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight),$.ajax({url:`${API_BD_TUTOR_BASE}users/register`,method:"POST",data:JSON.stringify({user_id:userid,username:"user_"+userid,role:role,userfullname:"Usuario Desconocido"}),contentType:"application/json",success:function(response){console.log("Usuario registrado en la API (userfullname por defecto):",response),messagesDiv.append("<p><strong>Debug:</strong> Usuario registrado en la API (userfullname por defecto).</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight);var userRegisteredKey="user_registered_"+userid;localStorage.setItem(userRegisteredKey,"true")},error:function(xhr,status,error){console.log("Error al registrar usuario (userfullname por defecto):",{xhr:xhr,status:status,error:error}),messagesDiv.append("<p><strong>Debug:</strong> Error al registrar usuario (userfullname por defecto): "+error+"</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight)}})}})}else console.log("Error al verificar usuario:",{xhr:xhr,status:status,error:error}),messagesDiv.append("<p><strong>Debug:</strong> Error al verificar usuario: "+error+"</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight)}}),verificarIntentosCuestionario();var btnIniciarEscaneo=$("#btn-iniciar-escaneo");btnIniciarEscaneo.length?btnIniciarEscaneo.on("click",(function(){messagesDiv.append("<p><strong>Debug:</strong> Iniciando escaneo del curso...</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight),verificarIntentosCuestionario(obtenerRecomendaciones)})):(console.log("Botón de escaneo no encontrado"),messagesDiv.append("<p><strong>Error:</strong> Botón de escaneo no encontrado</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight)),form.length?form.on("submit",(function(e){if(e.preventDefault(),isChatBlocked)return messagesDiv.append("<p><strong>Tutor:</strong> No puedes enviar mensajes mientras estás realizando un cuestionario en curso.</p>"),void messagesDiv.scrollTop(messagesDiv[0].scrollHeight);var message=chatInput.val();if(""!==message.trim()){messagesDiv.append("<p><strong>Tú:</strong> "+message+"</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight),chatInput.val(""),$.ajax({url:`${API_BD_TUTOR_BASE}messages/save`,method:"POST",data:JSON.stringify({user_id:userid,message_type:"input",message_text:message}),contentType:"application/json",success:function(response){console.log("Mensaje del usuario guardado:",response),messagesDiv.append("<p><strong>Debug:</strong> Mensaje del usuario guardado en la API.</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight)},error:function(xhr,status,error){console.log("Error al guardar mensaje del usuario:",{xhr:xhr,status:status,error:error}),messagesDiv.append("<p><strong>Debug:</strong> Error al guardar mensaje del usuario: "+error+"</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight)}}),messagesDiv.append("<p><strong>Debug:</strong> Enviando a la API...</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight);$.ajax({url:API_tutor,method:"POST",data:JSON.stringify({instruccion:"Actúa como un profesor especializado en Análisis y Diseño de Software. Responde todas las preguntas relacionadas con el tema de forma clara, detallada y estructurada, utilizando ejemplos prácticos y profundizando en las teorías, principios y metodologías que conforman el área. Tus respuestas deben incluir aspectos tanto teóricos como prácticos, explicando de forma comprensible conceptos como los diagramas UML, las metodologías ágiles, el ciclo de vida del software, los patrones de diseño, la arquitectura de software, la ingeniería de requisitos, y otras áreas clave del análisis y diseño de software. Responde en español de manera técnica, pero accesible para estudiantes. Responde que no puedes ayudar si preguntan algo que no este relacionado al Análisis y Diseño de Software.",entrada:message,max_nuevos_tokens:1e3}),contentType:"application/json",success:function(response){var tutorResponse=response.respuesta;messagesDiv.append("<p><strong>Bot:</strong> "+tutorResponse+"</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight),$.ajax({url:`${API_BD_TUTOR_BASE}messages/save`,method:"POST",data:JSON.stringify({user_id:userid,message_type:"output",message_text:tutorResponse}),contentType:"application/json",success:function(saveResponse){console.log("Respuesta del tutor guardada:",saveResponse),messagesDiv.append("<p><strong>Debug:</strong> Respuesta del tutor guardada en la API.</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight)},error:function(xhr,status,error){console.log("Error al guardar respuesta del tutor:",{xhr:xhr,status:status,error:error}),messagesDiv.append("<p><strong>Debug:</strong> Error al guardar respuesta del tutor: "+error+"</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight)}})},error:function(xhr,status,error){messagesDiv.append("<p><strong>Bot:</strong> Error al conectar con la API: "+error+"</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight)}})}})):messagesDiv.append("<p><strong>Error:</strong> Formulario no encontrado</p>")}}}));

//# sourceMappingURL=chat.min.js.map