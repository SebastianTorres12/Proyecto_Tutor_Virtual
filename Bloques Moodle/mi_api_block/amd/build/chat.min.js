define("block_mi_api_block/chat",["jquery"],(function($){const API_tutor="http://localhost:8000/generar",API_Moodle="http://localhost/webservice/rest/server.php";function obtenerContextoEstudiante(userid,courseid,forceRefresh){return new Promise((function(resolve){var contextoKey="contexto_estudiante_"+userid+"_"+courseid;if(!forceRefresh){var contextoGuardado=sessionStorage.getItem(contextoKey);if(contextoGuardado)try{var notas=JSON.parse(contextoGuardado);return void resolve(notas)}catch(e){}}var params={wstoken:"10b97b49ec5c5119e48c566de5228f8f",wsfunction:"gradereport_user_get_grade_items",moodlewsrestformat:"json",courseid:courseid,userid:userid};$.ajax({url:`${API_Moodle}?${$.param(params)}`,method:"GET",dataType:"json",success:function(data){var notas=[];data.usergrades&&data.usergrades.forEach((user=>{user.gradeitems.forEach((item=>{if(item.itemname){var grade=null!==item.graderaw?item.graderaw:0;notas.push({userid:user.userid,name:user.userfullname,grade:grade,actividad:item.itemname})}}))})),sessionStorage.setItem(contextoKey,JSON.stringify(notas)),resolve(notas)},error:function(){resolve([])}})}))}return{init:function(userid,courseid,role){var messagesDiv=$("#chat-messages"),form=$("#chat-form"),chatInput=$("#chat-input"),submitButton=form.find('button[type="submit"]'),isChatBlocked=!1;function scrollToBottom(){messagesDiv.scrollTop(messagesDiv[0].scrollHeight)}function showDebug(msg){messagesDiv.append("<p><strong>Debug:</strong> "+msg+"</p>"),scrollToBottom()}function showTutor(msg){!function(htmlMsg){var bubble=$('<div class="chat-bubble tutor-bubble"></div>');bubble.append("<span></span>"),messagesDiv.append(bubble),scrollToBottom();var safeHtml=htmlMsg.replace(/```([a-zA-Z]*)\n([\s\S]*?)```/g,(function(match,lang,code){return"<pre><code>"+$("<div>").text(code).html()+"</code></pre>"})).replace(/\n/g,"<br>").replace(/<(?!br\s*\/?>|b>|\/b>|i>|\/i>|pre>|\/pre>|code>|\/code>)[^>]+>/gi,""),i=0;!function typeChar(){i<=safeHtml.length?(bubble.find("span").html(safeHtml.slice(0,i)),scrollToBottom(),i++,setTimeout(typeChar,12)):(bubble.find("span").html(safeHtml),scrollToBottom())}()}(msg)}function verificarIntentosCuestionario(callback){var params={wstoken:"10b97b49ec5c5119e48c566de5228f8f",wsfunction:"gradereport_user_get_grade_items",moodlewsrestformat:"json",courseid:courseid,userid:userid};showDebug("Verificando intentos de cuestionarios..."),$.ajax({url:`${API_Moodle}?${$.param(params)}`,method:"GET",dataType:"json",success:function(data){var actividades=[];if(data.usergrades&&data.usergrades.forEach((user=>{user.gradeitems.forEach((item=>{item.itemname&&item.cmid&&actividades.push({cmid:item.cmid,name:item.itemname})}))})),0===actividades.length)return showDebug("No se encontraron actividades para verificar."),void(callback&&callback());var quizzes=[],promises=actividades.map((actividad=>{var paramsContext={wstoken:"10b97b49ec5c5119e48c566de5228f8f",wsfunction:"core_course_get_course_module",moodlewsrestformat:"json",cmid:actividad.cmid};return $.ajax({url:`${API_Moodle}?${$.param(paramsContext)}`,method:"GET",dataType:"json",success:function(contextData){contextData.cm&&"quiz"===contextData.cm.modname&&quizzes.push({quizid:contextData.cm.instance,name:actividad.name})}})}));Promise.all(promises).then((()=>{if(0===quizzes.length)return showDebug("No se encontraron cuestionarios para verificar."),void(callback&&setTimeout(callback,0));var attemptPromises=quizzes.map((quiz=>{var paramsAttempts={wstoken:"10b97b49ec5c5119e48c566de5228f8f",wsfunction:"mod_quiz_get_user_attempts",moodlewsrestformat:"json",quizid:quiz.quizid,userid:userid,status:"all",includepreviews:0};return $.ajax({url:`${API_Moodle}?${$.param(paramsAttempts)}`,method:"GET",dataType:"json",success:function(attemptData){attemptData.attempts&&attemptData.attempts.length>0&&(attemptData.attempts.find((attempt=>"inprogress"===attempt.state))&&(isChatBlocked=!0,showTutor("No puedes enviar mensajes mientras estás realizando un cuestionario en curso."),chatInput.prop("disabled",!0),submitButton.prop("disabled",!0)))}})}));Promise.all(attemptPromises).then((()=>{isChatBlocked||(showDebug("No se encontraron intentos de cuestionarios en curso."),callback&&setTimeout(callback,0))})).catch((()=>{showTutor("Error al verificar intentos de cuestionarios."),callback&&setTimeout(callback,0)}))})).catch((()=>{showTutor("Error al verificar actividades."),callback&&setTimeout(callback,0)}))},error:function(xhr,status,error){showTutor("Error al obtener actividades: "+error+" (Código: "+xhr.status+")"),callback&&callback()}})}function obtenerRecomendaciones(){showDebug("Obteniendo calificaciones...");var params={wstoken:"10b97b49ec5c5119e48c566de5228f8f",wsfunction:"gradereport_user_get_grade_items",moodlewsrestformat:"json",courseid:courseid,userid:userid};$.ajax({url:`${API_Moodle}?${$.param(params)}`,method:"GET",dataType:"json",success:function(data){var notas=[];if(data.usergrades&&data.usergrades.forEach((user=>{user.gradeitems.forEach((item=>{if(item.itemname){var grade=null!==item.graderaw?item.graderaw:0;grade>0&&notas.push({userid:user.userid,name:user.userfullname,grade:grade,actividad:item.itemname})}}))})),0!==notas.length){showDebug("Enviando calificaciones a la API..."),$.ajax({url:API_tutor,method:"POST",data:JSON.stringify({instruccion:'Actúa como un tutor virtual especializado en la enseñanza de Análisis y Diseño de Software. Tu tarea es analizar las calificaciones de un estudiante y generar recomendaciones personalizadas para mejorar su rendimiento en cada actividad. Recibirás una lista de calificaciones en el formato: [{"userid": number, "name": string, "grade": number, "actividad": string}, ...]. Para cada actividad, evalúa la nota (que está en una escala de 0 a 10) y genera una recomendación específica basada en el rendimiento del estudiante. Si la nota es menor a 5, sugiere acciones para mejorar (por ejemplo, revisar conceptos específicos, practicar más ejercicios, o buscar ayuda adicional). Si la nota está entre 5 y 7, sugiere formas de consolidar el aprendizaje (por ejemplo, profundizar en temas específicos o aplicar conceptos en proyectos prácticos). Si la nota es mayor a 7, felicita al estudiante y sugiere cómo puede seguir avanzando (por ejemplo, explorar temas más avanzados o liderar proyectos). Devuelve las recomendaciones en formato JSON con la siguiente estructura: {"recomendaciones": [{"userid": number, "name": string, "nota": number, "actividad": string, "recomendacion": string}, ...]}. Responde en español.',entrada:JSON.stringify(notas),max_nuevos_tokens:5e3}),contentType:"application/json",success:function(response){if(response.respuesta){var cleanedResponse=response.respuesta.replace(/```json\n/,"").replace(/\n```/,"").trim();try{var recomendaciones=JSON.parse(cleanedResponse);if(recomendaciones.recomendaciones&&recomendaciones.recomendaciones.length>0){var mensaje=`Hola ${recomendaciones.recomendaciones[0].name}, he analizado tus calificaciones. Aquí tienes algunas recomendaciones para mejorar:<br>`;recomendaciones.recomendaciones.forEach((rec=>{mensaje+=`- En ${rec.actividad}, obtuviste ${rec.nota}: ${rec.recomendacion}<br>`})),showTutor(mensaje)}else showTutor("Error: No se encontraron recomendaciones en la respuesta.")}catch(parseError){showTutor("Error al parsear las recomendaciones: "+parseError.message)}}else showTutor("Error: Respuesta inválida de la API.")},error:function(xhr,status,error){showTutor("Error al obtener recomendaciones: "+error)}})}else showTutor("No hay actividades con notas mayores a 0 para analizar.")},error:function(xhr,status,error){showTutor("Error al obtener calificaciones: "+error+" (Código: "+xhr.status+")")}})}showDebug("Verificando si el usuario ya está registrado..."),$.ajax({url:`http://localhost:8080/api/users/${userid}`,method:"GET",dataType:"json",success:function(response){console.log("Usuario encontrado en la API:",response),showDebug("Usuario ya registrado en la API: "+response.username),localStorage.setItem("user_registered_"+userid,"true")},error:function(xhr){404===xhr.status?(showDebug("Usuario no encontrado. Procediendo a registrar..."),obtenerContextoEstudiante(userid,courseid,!0).then((function(notas){var userfullname="Usuario Desconocido";notas&&notas.length>0&&notas[0].name&&(userfullname=notas[0].name),showDebug("Nombre completo del usuario: "+userfullname),showDebug("Rol del usuario: "+role),$.ajax({url:"http://localhost:8080/api/users/register",method:"POST",data:JSON.stringify({user_id:userid,username:"user_"+userid,role:role,userfullname:userfullname}),contentType:"application/json",success:function(response){console.log("Usuario registrado en la API:",response),showDebug("Usuario registrado en la API."),localStorage.setItem("user_registered_"+userid,"true")},error:function(xhr,status,error){showDebug("Error al registrar usuario: "+error)}})})).catch((function(error){showDebug("Error al obtener contexto del estudiante: "+error)}))):showDebug("Error al verificar usuario: "+xhr.status)}}),verificarIntentosCuestionario();var btnIniciarEscaneo=$("#btn-iniciar-escaneo");btnIniciarEscaneo.length?btnIniciarEscaneo.on("click",(function(){showDebug("Iniciando escaneo del curso..."),obtenerContextoEstudiante(userid,courseid,!0).then((function(){verificarIntentosCuestionario(obtenerRecomendaciones)})).catch((function(error){showDebug("Error al refrescar el contexto del estudiante: "+error)}))})):showDebug("Botón de escaneo no encontrado"),form.length?form.on("submit",(function(e){if(e.preventDefault(),isChatBlocked)showTutor("No puedes enviar mensajes mientras estás realizando un cuestionario en curso.");else{var message=chatInput.val();if(""!==message.trim()){if(function(texto){const textoLimpio=texto.trim().toLowerCase();return["hola","buenos dias","buenas tardes","buenas noches","hello","hi","saludos","que tal","cómo estás","como estas"].some((saludo=>textoLimpio===saludo||textoLimpio.startsWith(saludo)))}(message)){var bubble=$('<div class="chat-bubble tutor-bubble"></div>').html("<span>¡Hola! Por favor, realiza preguntas relacionadas con Análisis y Diseño de Software o sobre tu progreso en el curso para que pueda ayudarte mejor.</span>");return messagesDiv.append(bubble),scrollToBottom(),void chatInput.val("")}!function(msg){var bubble=$('<div class="chat-bubble user-bubble"></div>').html("<span>"+$("<div>").text(msg).html()+"</span>");messagesDiv.append(bubble),scrollToBottom()}(message),chatInput.val(""),$.ajax({url:"http://localhost:8080/api/messages/save",method:"POST",data:JSON.stringify({user_id:userid,message_type:"input",message_text:message}),contentType:"application/json"}),showDebug("Obteniendo contexto del estudiante..."),obtenerContextoEstudiante(userid,courseid).then((function(notas){var instruccion="Actúa como un profesor especializado en Análisis y Diseño de Software. Responde todas las preguntas relacionadas con el tema de forma clara, detallada y estructurada, utilizando ejemplos prácticos y profundizando en las teorías, principios y metodologías que conforman el área. Además, si la pregunta está relacionada con el estudiante, sus calificaciones o su progreso, utiliza el siguiente contexto del estudiante para personalizar tu respuesta. Si el mensaje no está relacionado con Análisis y Diseño de Software o el curso, responde que solo puedes ayudar en esos temas. Responde en español de manera técnica, pero accesible para estudiantes. CONTEXTO_ESTUDIANTE: "+JSON.stringify(notas);$.ajax({url:API_tutor,method:"POST",data:JSON.stringify({instruccion:instruccion,entrada:message,max_nuevos_tokens:1e3}),contentType:"application/json",success:function(response){var tutorResponse=response.respuesta;showTutor(tutorResponse),$.ajax({url:"http://localhost:8080/api/messages/save",method:"POST",data:JSON.stringify({user_id:userid,message_type:"output",message_text:tutorResponse}),contentType:"application/json"})},error:function(xhr,status,error){showTutor("Error al conectar con la API: "+error)}})})).catch((function(error){showTutor("Error al obtener el contexto del estudiante: "+error)}))}}})):showDebug("Formulario no encontrado")}}}));

//# sourceMappingURL=chat.min.js.map