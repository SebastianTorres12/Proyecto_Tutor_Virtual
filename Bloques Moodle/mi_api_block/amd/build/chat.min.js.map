{"version":3,"file":"chat.min.js","sources":["../src/chat.js"],"sourcesContent":["/* eslint-disable no-trailing-spaces */\n/* eslint-disable camelcase */\n/* eslint-disable jsdoc/require-jsdoc */\n/* eslint-disable promise/always-return */\n/* eslint-disable promise/no-nesting */\n/* eslint-disable jsdoc/require-param */\n/* eslint-disable max-len */\n/* eslint-disable no-console */\ndefine(['jquery'], function($) {\n    // Definición de variables generales para las APIs\n    const API_tutor = 'http://localhost:8000/generar';\n    const API_BD_TUTOR_BASE = 'http://localhost:8080/api/';\n    const API_Moodle = 'http://localhost/webservice/rest/server.php';\n\n    /**\n     * Detecta si el texto es un saludo o mensaje irrelevante.\n     * @param {string} texto\n     * @returns {boolean}\n     */\n    function esSaludoOMensajeIrrelevante(texto) {\n        const saludos = [\n            'hola', 'buenos dias', 'buenas tardes', 'buenas noches',\n            'hello', 'hi', 'saludos', 'que tal', 'cómo estás', 'como estas'\n        ];\n        const textoLimpio = texto.trim().toLowerCase();\n        return saludos.some(saludo => textoLimpio === saludo || textoLimpio.startsWith(saludo));\n    }\n\n    /**\n     * Obtiene el contexto del estudiante (notas y actividades) y lo guarda en sessionStorage.\n     * Si forceRefresh=true, fuerza la actualización desde la API.\n     * @param {number} userid\n     * @param {number} courseid\n     * @param {boolean} [forceRefresh]\n     * @returns {Promise<Array>}\n     */\n    function obtenerContextoEstudiante(userid, courseid, forceRefresh) {\n        return new Promise(function(resolve) {\n            var contextoKey = 'contexto_estudiante_' + userid + '_' + courseid;\n            if (!forceRefresh) {\n                var contextoGuardado = sessionStorage.getItem(contextoKey);\n                if (contextoGuardado) {\n                    try {\n                        var notas = JSON.parse(contextoGuardado);\n                        resolve(notas);\n                        return;\n                    } catch (e) {\n                        // Si hay error al parsear, continúa para obtenerlo de la API\n                    }\n                }\n            }\n            var params = {\n                wstoken: '10b97b49ec5c5119e48c566de5228f8f',\n                wsfunction: 'gradereport_user_get_grade_items',\n                moodlewsrestformat: 'json',\n                courseid: courseid,\n                userid: userid\n            };\n            $.ajax({\n                url: `${API_Moodle}?${$.param(params)}`,\n                method: 'GET',\n                dataType: 'json',\n                success: function(data) {\n                    var notas = [];\n                    if (data.usergrades) {\n                        data.usergrades.forEach(user => {\n                            user.gradeitems.forEach(item => {\n                                if (item.itemname) {\n                                    var grade = item.graderaw !== null ? item.graderaw : 0;\n                                    notas.push({\n                                        userid: user.userid,\n                                        name: user.userfullname,\n                                        grade: grade,\n                                        actividad: item.itemname\n                                    });\n                                }\n                            });\n                        });\n                    }\n                    sessionStorage.setItem(contextoKey, JSON.stringify(notas));\n                    resolve(notas);\n                },\n                error: function() {\n                    resolve([]);\n                }\n            });\n        });\n    }\n\n    // Función para llamar a la API del backend local\n    function llamarAPITutor(instruccion, entrada, maxTokens) {\n        return new Promise(function(resolve, reject) {\n            $.ajax({\n                url: API_tutor,\n                method: 'POST',\n                contentType: 'application/json',\n                data: JSON.stringify({\n                    instruccion: instruccion,\n                    entrada: entrada,\n                    max_nuevos_tokens: maxTokens || 1000\n                }),\n                success: function(response) {\n                    if (response.respuesta) {\n                        resolve({ respuesta: response.respuesta });\n                    } else {\n                        reject(new Error('Respuesta inválida de la API'));\n                    }\n                },\n                error: function(xhr, status, error) {\n                    reject(new Error(error));\n                }\n            });\n        });\n    }\n\n    return {\n        init: function(userid, courseid, role) {\n            var messagesDiv = $('#chat-messages');\n            var form = $('#chat-form');\n            var chatInput = $('#chat-input');\n            var submitButton = form.find('button[type=\"submit\"]');\n            var isChatBlocked = false;\n\n            function scrollToBottom() {\n                messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n            }\n\n            function showUser(msg) {\n                var bubble = $('<div class=\"chat-bubble user-bubble\"></div>').html('<span>' + $('<div>').text(msg).html() + '</span>');\n                messagesDiv.append(bubble);\n                scrollToBottom();\n            }\n\n            // Loader visual para el tutor\n            function showTutorLoader() {\n                var loader = $('<div class=\"chat-bubble tutor-bubble tutor-loader\"></div>').html('<span><em>El tutor está escribiendo...</em></span>');\n                messagesDiv.append(loader);\n                scrollToBottom();\n            }\n            function removeTutorLoader() {\n                messagesDiv.find('.tutor-loader').remove();\n            }\n\n            // Animación de \"escritura\" para el tutor\n            function animateTutorMessage(htmlMsg) {\n                removeTutorLoader();\n                var bubble = $('<div class=\"chat-bubble tutor-bubble\"></div>');\n                bubble.append('<span></span>');\n                messagesDiv.append(bubble);\n                scrollToBottom();\n                // Mejorar saltos de línea para mensajes largos\n                var safeHtml = htmlMsg\n                    // Negritas\n                    .replace(/\\*\\*([^*]+)\\*\\*/g, function(match, p1) { return '<b>' + p1.replace(/\\n/g, '<br>') + '</b>'; })\n                    // Código\n                    .replace(/```([a-zA-Z]*)\\n([\\s\\S]*?)```/g, function(match, lang, code) {\n                        return '<pre><code>' + $('<div>').text(code).html().replace(/\\n/g, '<br>') + '</code></pre>';\n                    })\n                    .replace(/\\n{2,}/g, '<br><br>')\n                    .replace(/\\n/g, '<br>')\n                    .replace(/<(?!br\\s*\\/?>|b>|\\/b>|strong>|\\/strong>|i>|\\/i>|pre>|\\/pre>|code>|\\/code>)[^>]+>/gi, '');\n                var i = 0;\n                function typeChar() {\n                    if (i <= safeHtml.length) {\n                        bubble.find('span').html(safeHtml.slice(0, i));\n                        scrollToBottom();\n                        i++;\n                        setTimeout(typeChar, 12);\n                    } else {\n                        bubble.find('span').html(safeHtml);\n                        addCodeActions(bubble);\n                        bubble.find('pre code').each(function() {\n                            var codeHtml = $(this).html();\n                            var formattedCode = codeHtml.replace(/<br\\s*\\/?>/gi, '\\n');\n                            $(this).text(formattedCode);\n                        });\n                        scrollToBottom();\n                    }\n                }\n                typeChar();\n            }\n\n            // Función para agregar botones de acción a los bloques de código\n            function addCodeActions(container) {\n                container.find('pre').each(function() {\n                    var $pre = $(this);\n                    var codeText = $pre.find('code').text() || $pre.text();\n                    var codeHtml = $pre.find('code').html() || $pre.html();\n                    var $actions = $('<div class=\"code-actions\"></div>');\n                    // Botón de copiar\n                    var $copyBtn = $('<button class=\"code-action-btn copy-btn\" title=\"Copiar código\">📋</button>');\n                    $copyBtn.on('click', function(e) {\n                        e.stopPropagation();\n                        copyToClipboard(codeText, codeHtml);\n                        showCopyNotification();\n                    });\n                    // Botón de expandir\n                    var $expandBtn = $('<button class=\"code-action-btn expand-btn\" title=\"Ver en ventana ampliada\">🔍</button>');\n                    $expandBtn.on('click', function(e) {\n                        e.stopPropagation();\n                        showCodeModal(codeText);\n                    });\n                    $actions.append($copyBtn).append($expandBtn);\n                    $pre.css('position', 'relative').append($actions);\n                });\n            }\n\n            // Función para copiar texto al portapapeles\n            function copyToClipboard(text, htmlSource) {\n                // Si se pasa htmlSource, convertir <br> y etiquetas a saltos de línea\n                if (htmlSource) {\n                    // Quitar etiquetas y convertir <br> a saltos de línea\n                    text = htmlSource\n                        .replace(/<br\\s*\\/?>/gi, '\\n')\n                        .replace(/<pre>|<code>|<\\/pre>|<\\/code>/gi, '')\n                        .replace(/&nbsp;/gi, ' ')\n                        .replace(/&lt;/gi, '<')\n                        .replace(/&gt;/gi, '>')\n                        .replace(/&amp;/gi, '&');\n                }\n                if (navigator.clipboard && navigator.clipboard.writeText) {\n                    navigator.clipboard.writeText(text).catch(function() {\n                        fallbackCopyToClipboard(text);\n                    });\n                } else {\n                    fallbackCopyToClipboard(text);\n                }\n            }\n\n            // Función de respaldo para copiar texto\n            function fallbackCopyToClipboard(text) {\n                var textArea = document.createElement(\"textarea\");\n                textArea.value = text;\n                textArea.style.position = \"fixed\";\n                textArea.style.left = \"-999999px\";\n                textArea.style.top = \"-999999px\";\n                document.body.appendChild(textArea);\n                textArea.focus();\n                textArea.select();\n                try {\n                    document.execCommand('copy');\n                } catch (err) {\n                    console.error('Error al copiar texto: ', err);\n                }\n                document.body.removeChild(textArea);\n            }\n\n            // Función para mostrar notificación de copiado\n            function showCopyNotification() {\n                var $notification = $('<div class=\"copy-notification\">Código copiado al portapapeles</div>');\n                $('body').append($notification);\n                \n                setTimeout(function() {\n                    $notification.addClass('show');\n                }, 10);\n                \n                setTimeout(function() {\n                    $notification.removeClass('show');\n                    setTimeout(function() {\n                        $notification.remove();\n                    }, 300);\n                }, 2000);\n            }\n\n            // Función para mostrar el modal con el código expandido\n            function showCodeModal(codeText) {\n                var $modal = $('#code-modal');\n                if ($modal.length === 0) {\n                    $modal = $('<div id=\"code-modal\" class=\"code-modal\">' +\n                        '<div class=\"code-modal-content\">' +\n                            '<div class=\"code-modal-header\">' +\n                                '<h3>Código</h3>' +\n                                '<span class=\"code-modal-close\">&times;</span>' +\n                            '</div>' +\n                            '<div class=\"code-modal-body\">' +\n                                '<pre><code></code></pre>' +\n                            '</div>' +\n                        '</div>' +\n                    '</div>');\n                    $('body').append($modal);\n                    $modal.find('.code-modal-close').on('click', function() {\n                        $modal.hide();\n                    });\n                    $modal.on('click', function(e) {\n                        if (e.target === this) {\n                            $modal.hide();\n                        }\n                    });\n                    $(document).on('keydown', function(e) {\n                        if (e.key === 'Escape' && $modal.is(':visible')) {\n                            $modal.hide();\n                        }\n                    });\n                }\n                // Mostrar el código con saltos de línea reales y sin etiquetas HTML\n                var formattedCode = codeText.replace(/<br\\s*\\/?>/gi, '\\n').replace(/<[^>]+>/g, '');\n                $modal.find('code').text(formattedCode);\n                $modal.show();\n            }\n\n            function showTutor(msg) {\n                animateTutorMessage(msg);\n            }\n\n            // Mostrar mensaje de bienvenida al iniciar el bloque\n            var mensajeBienvenida = '¡Bienvenido al chat de tutoría! Si tienes dudas sobre Análisis y Diseño de Software, tu progreso en el curso, o necesitas recomendaciones, no dudes en preguntar. Estoy aquí para ayudarte.';\n            showTutor(mensajeBienvenida);\n\n            /**\n             * Registra al usuario en la API si no existe.\n             */\n            function registrarUsuario() {\n                $.ajax({\n                    url: `${API_BD_TUTOR_BASE}users/${userid}`,\n                    method: 'GET',\n                    dataType: 'json',\n                    success: function() {\n                        // Usuario encontrado, no se hace nada\n                        localStorage.setItem('user_registered_' + userid, 'true');\n                    },\n                    error: function(xhr) {\n                        if (xhr.status === 404) {\n                            // Usuario no encontrado, se procede a registrar\n                            // Obtener nombre completo\n                            obtenerContextoEstudiante(userid, courseid, true).then(function(notas) {\n                                var userfullname = 'Usuario Desconocido';\n                                if (notas && notas.length > 0 && notas[0].name) {\n                                    userfullname = notas[0].name;\n                                }\n                                $.ajax({\n                                    url: `${API_BD_TUTOR_BASE}users/register`,\n                                    method: 'POST',\n                                    data: JSON.stringify({\n                                        user_id: userid,\n                                        username: 'user_' + userid,\n                                        role: role,\n                                        userfullname: userfullname\n                                    }),\n                                    contentType: 'application/json',\n                                    success: function() {\n                                        localStorage.setItem('user_registered_' + userid, 'true');\n                                    },\n                                    error: function() {\n                                        // Error al registrar usuario\n                                    }\n                                });\n                            }).catch(function() {\n                                // Error al obtener contexto del estudiante\n                            });\n                        } else {\n                            // Error al verificar usuario\n                        }\n                    }\n                });\n            }\n\n            /**\n             * Verifica si hay un intento de cuestionario en curso y bloquea el chat si es necesario.\n             */\n            function verificarIntentosCuestionario(callback) {\n                var params = {\n                    wstoken: '10b97b49ec5c5119e48c566de5228f8f',\n                    wsfunction: 'gradereport_user_get_grade_items',\n                    moodlewsrestformat: 'json',\n                    courseid: courseid,\n                    userid: userid\n                };\n                $.ajax({\n                    url: `${API_Moodle}?${$.param(params)}`,\n                    method: 'GET',\n                    dataType: 'json',\n                    success: function(data) {\n                        var actividades = [];\n                        if (data.usergrades) {\n                            data.usergrades.forEach(user => {\n                                user.gradeitems.forEach(item => {\n                                    if (item.itemname && item.cmid) {\n                                        actividades.push({\n                                            cmid: item.cmid,\n                                            name: item.itemname\n                                        });\n                                    }\n                                });\n                            });\n                        }\n                        if (actividades.length === 0) {\n                            if (callback) {\n                                callback();\n                            }\n                            return;\n                        }\n                        var quizzes = [];\n                        var promises = actividades.map(actividad => {\n                            var paramsContext = {\n                                wstoken: '10b97b49ec5c5119e48c566de5228f8f',\n                                wsfunction: 'core_course_get_course_module',\n                                moodlewsrestformat: 'json',\n                                cmid: actividad.cmid\n                            };\n                            return $.ajax({\n                                url: `${API_Moodle}?${$.param(paramsContext)}`,\n                                method: 'GET',\n                                dataType: 'json',\n                                success: function(contextData) {\n                                    if (contextData.cm && contextData.cm.modname === 'quiz') {\n                                        quizzes.push({\n                                            quizid: contextData.cm.instance,\n                                            name: actividad.name\n                                        });\n                                    }\n                                }\n                            });\n                        });\n                        Promise.all(promises).then(() => {\n                            if (quizzes.length === 0) {\n                                if (callback) {\n                                    setTimeout(callback, 0);\n                                }\n                                return;\n                            }\n                            var attemptPromises = quizzes.map(quiz => {\n                                var paramsAttempts = {\n                                    wstoken: '10b97b49ec5c5119e48c566de5228f8f',\n                                    wsfunction: 'mod_quiz_get_user_attempts',\n                                    moodlewsrestformat: 'json',\n                                    quizid: quiz.quizid,\n                                    userid: userid,\n                                    status: 'all',\n                                    includepreviews: 0\n                                };\n                                return $.ajax({\n                                    url: `${API_Moodle}?${$.param(paramsAttempts)}`,\n                                    method: 'GET',\n                                    dataType: 'json',\n                                    success: function(attemptData) {\n                                        if (attemptData.attempts && attemptData.attempts.length > 0) {\n                                            var inProgressAttempt = attemptData.attempts.find(attempt => attempt.state === 'inprogress');\n                                            if (inProgressAttempt) {\n                                                isChatBlocked = true;\n                                                showTutor('No puedes enviar mensajes mientras estás realizando un cuestionario en curso.');\n                                                chatInput.prop('disabled', true);\n                                                submitButton.prop('disabled', true);\n                                            }\n                                        }\n                                    }\n                                });\n                            });\n                            Promise.all(attemptPromises).then(() => {\n                                if (!isChatBlocked) {\n                                    if (callback) {\n                                        setTimeout(callback, 0);\n                                    }\n                                }\n                            }).catch(() => {\n                                showTutor('Error al verificar intentos de cuestionarios.');\n                                if (callback) {\n                                    setTimeout(callback, 0);\n                                }\n                            });\n                        }).catch(() => {\n                            showTutor('Error al verificar actividades.');\n                            if (callback) {\n                                setTimeout(callback, 0);\n                            }\n                        });\n                    },\n                    error: function(xhr, status, error) {\n                        showTutor('Error al obtener actividades: ' + error + ' (Código: ' + xhr.status + ')');\n                        if (callback) {\n                            callback();\n                        }\n                    }\n                });\n            }\n\n            /**\n             * Obtiene las calificaciones y genera recomendaciones.\n             */\n            function obtenerRecomendaciones() {\n                showTutorLoader();\n                var params = {\n                    wstoken: '10b97b49ec5c5119e48c566de5228f8f',\n                    wsfunction: 'gradereport_user_get_grade_items',\n                    moodlewsrestformat: 'json',\n                    courseid: courseid,\n                    userid: userid\n                };\n                $.ajax({\n                    url: `${API_Moodle}?${$.param(params)}`,\n                    method: 'GET',\n                    dataType: 'json',\n                    success: function(data) {\n                        var notas = [];\n                        if (data.usergrades) {\n                            data.usergrades.forEach(user => {\n                                user.gradeitems.forEach(item => {\n                                    if (item.itemname) {\n                                        var grade = item.graderaw !== null ? item.graderaw : 0;\n                                        if (grade > 0) {\n                                            notas.push({\n                                                userid: user.userid,\n                                                name: user.userfullname,\n                                                grade: grade,\n                                                actividad: item.itemname\n                                            });\n                                        }\n                                    }\n                                });\n                            });\n                        }\n                        if (notas.length === 0) {\n                            removeTutorLoader();\n                            showTutor('No hay actividades con notas mayores a 0 para analizar.');\n                            return;\n                        }\n                        var instruccionNotas = \"Actúa como un tutor virtual especializado en la enseñanza de Análisis y Diseño de Software. Tu tarea es analizar las calificaciones de un estudiante y generar recomendaciones personalizadas para mejorar su rendimiento en cada actividad. Recibirás una lista de calificaciones en el formato: [{\\\"userid\\\": number, \\\"name\\\": string, \\\"grade\\\": number, \\\"actividad\\\": string}, ...]. Para cada actividad, evalúa la nota (que está en una escala de 0 a 10) y genera una recomendación específica basada en el rendimiento del estudiante. Si la nota es menor a 5, sugiere acciones para mejorar (por ejemplo, revisar conceptos específicos, practicar más ejercicios, o buscar ayuda adicional). Si la nota está entre 5 y 7, sugiere formas de consolidar el aprendizaje (por ejemplo, profundizar en temas específicos o aplicar conceptos en proyectos prácticos). Si la nota es mayor a 7, felicita al estudiante y sugiere cómo puede seguir avanzando (por ejemplo, explorar temas más avanzados o liderar proyectos). Devuelve las recomendaciones en formato JSON con la siguiente estructura: {\\\"recomendaciones\\\": [{\\\"userid\\\": number, \\\"name\\\": string, \\\"grade\\\": number, \\\"actividad\\\": string, \\\"recomendacion\\\": string}, ...]}. Responde en español.\";\n                        llamarAPITutor(instruccionNotas, JSON.stringify(notas), 5000)\n                            .then(function(response) {\n                                removeTutorLoader();\n                                if (response.respuesta) {\n                                    var cleanedResponse = response.respuesta;\n                                    var jsonMatch = cleanedResponse.match(/{[\\s\\S]*}/);\n                                    var textoExplicativo = cleanedResponse;\n                                    if (jsonMatch) {\n                                        textoExplicativo = cleanedResponse.substring(0, jsonMatch.index).trim();\n                                        cleanedResponse = jsonMatch[0];\n                                    }\n                                    try {\n                                        var recomendaciones = JSON.parse(cleanedResponse);\n                                        if (recomendaciones.recomendaciones && recomendaciones.recomendaciones.length > 0) {\n                                            var studentName = recomendaciones.recomendaciones[0].name;\n                                            var mensaje = `<div style='margin-bottom:8px;'><strong>Hola ${studentName}, he analizado tus calificaciones. Aquí tienes algunas recomendaciones para mejorar:</strong></div>`;\n                                            if (textoExplicativo) {\n                                                mensaje += `<div style='color:#555;margin-bottom:8px;'>${textoExplicativo.replace(/\\n/g, '<br>')}</div>`;\n                                            }\n                                            mensaje += '<ul style=\"margin-left:18px;\">';\n                                            recomendaciones.recomendaciones.forEach(rec => {\n                                                mensaje += `<li><strong>${rec.actividad}</strong> (Nota: ${rec.grade}):<br><span style='color:#007bff;'>${rec.recomendacion}</span></li>`;\n                                            });\n                                            mensaje += '</ul>';\n                                            showTutor(mensaje);\n                                        } else {\n                                            showTutor('No se han obtenido recomendaciones para mostrar.');\n                                        }\n                                    } catch (parseError) {\n                                        showTutor('Error al parsear las recomendaciones: ' + parseError.message);\n                                    }\n                                } else {\n                                    showTutor('Error: Respuesta inválida de la API.');\n                                }\n                            })\n                            .catch(function(error) {\n                                removeTutorLoader();\n                                showTutor('Error al obtener recomendaciones: ' + error.message);\n                            });\n                    },\n                    error: function(xhr, status, error) {\n                        removeTutorLoader();\n                        showTutor('Error al obtener calificaciones: ' + error + ' (Código: ' + xhr.status + ')');\n                    }\n                });\n            }\n\n            // Registrar usuario al cargar el bloque\n            registrarUsuario();\n\n            // Verificar intentos de cuestionarios en curso al cargar el bloque\n            verificarIntentosCuestionario();\n\n            // Configurar el botón de escaneo para refrescar contexto y recomendaciones\n            var btnIniciarEscaneo = $('#btn-iniciar-escaneo');\n            var cooldownEscaneo = false;\n            var cooldownTimeEscaneo = 10000; // 10 segundos\n            \n            if (btnIniciarEscaneo.length) {\n                btnIniciarEscaneo.on('click', function() {\n                    if (cooldownEscaneo) {\n                        showTutor('Espera un momento antes de solicitar el análisis de desempeño nuevamente.');\n                        return;\n                    }\n                    \n                    cooldownEscaneo = true;\n                    btnIniciarEscaneo.prop('disabled', true);\n                    btnIniciarEscaneo.text('Analizando...');\n                    \n                    // Refresca el contexto en sessionStorage\n                    obtenerContextoEstudiante(userid, courseid, true).then(function() {\n                        verificarIntentosCuestionario(obtenerRecomendaciones);\n                    }).catch(function() {\n                        // Error al refrescar el contexto del estudiante\n                        showTutor('Error al obtener el contexto del estudiante para el análisis.');\n                    }).finally(function() {\n                        // Restaurar el botón después del cooldown\n                        setTimeout(function() {\n                            cooldownEscaneo = false;\n                            btnIniciarEscaneo.prop('disabled', false);\n                            btnIniciarEscaneo.text('Ver desempeño');\n                        }, cooldownTimeEscaneo);\n                    });\n                });\n            } else {\n                // Botón de escaneo no encontrado\n            }\n\n            // Manejo del formulario de chat\n            if (form.length) {\n                // Enviar mensaje con Enter, salto de línea con Shift+Enter\n                chatInput.on('keydown', function(e) {\n                    if (e.key === 'Enter') {\n                        if (!e.shiftKey) {\n                            e.preventDefault();\n                            form.trigger('submit');\n                        }\n                        // Si es Shift+Enter, permite salto de línea (comportamiento por defecto)\n                    }\n                });\n\n                form.on('submit', function(e) {\n                    e.preventDefault();\n                    if (isChatBlocked) {\n                        showTutor('No puedes enviar mensajes mientras estás realizando un cuestionario en curso.');\n                        return;\n                    }\n                    var message = chatInput.val();\n                    if (message.trim() === '') {\n                        return;\n                    }\n                    if (esSaludoOMensajeIrrelevante(message)) {\n                        var bubble = $('<div class=\"chat-bubble tutor-bubble\"></div>').html('<span>¡Hola! Por favor, realiza preguntas relacionadas con Análisis y Diseño de Software o sobre tu progreso en el curso para que pueda ayudarte mejor.</span>');\n                        messagesDiv.append(bubble);\n                        scrollToBottom();\n                        chatInput.val('');\n                        return;\n                    }\n                    showUser(message);\n                    chatInput.val('');\n                    $.ajax({\n                        url: `${API_BD_TUTOR_BASE}messages/save`,\n                        method: 'POST',\n                        data: JSON.stringify({\n                            user_id: userid,\n                            message_type: 'input',\n                            message_text: message\n                        }),\n                        contentType: 'application/json'\n                    });\n                    showTutorLoader();\n                    obtenerContextoEstudiante(userid, courseid).then(function(notas) {\n                        var instruccion = \"Actúa como un profesor especializado en Análisis y Diseño de Software. Responde todas las preguntas relacionadas con el tema de forma clara, detallada y estructurada, utilizando ejemplos prácticos y profundizando en las teorías, principios y metodologías que conforman el área. Además, si la pregunta está relacionada con el estudiante, sus calificaciones o su progreso, utiliza el siguiente contexto del estudiante para personalizar tu respuesta. Si el mensaje no está relacionado con Análisis y Diseño de Software o el curso, responde que solo puedes ayudar en esos temas. Responde en español de manera técnica, pero accesible para estudiantes. CONTEXTO_ESTUDIANTE: \" + JSON.stringify(notas);\n                        llamarAPITutor(instruccion, message, 1000)\n                            .then(function(response) {\n                                var tutorResponse = response.respuesta;\n                                showTutor(tutorResponse);\n                                $.ajax({\n                                    url: `${API_BD_TUTOR_BASE}messages/save`,\n                                    method: 'POST',\n                                    data: JSON.stringify({\n                                        user_id: userid,\n                                        message_type: 'output',\n                                        message_text: tutorResponse\n                                    }),\n                                    contentType: 'application/json'\n                                });\n                            })\n                            .catch(function(error) {\n                                showTutor('Error al conectar con la API: ' + error.message);\n                            });\n                    }).catch(function() {\n                        showTutor('Error al obtener el contexto del estudiante.');\n                    });\n                });\n            } else {\n                // Formulario no encontrado\n            }\n        }\n    };\n});"],"names":["define","$","API_Moodle","obtenerContextoEstudiante","userid","courseid","forceRefresh","Promise","resolve","contextoKey","contextoGuardado","sessionStorage","getItem","notas","JSON","parse","e","params","wstoken","wsfunction","moodlewsrestformat","ajax","url","param","method","dataType","success","data","usergrades","forEach","user","gradeitems","item","itemname","grade","graderaw","push","name","userfullname","actividad","setItem","stringify","error","llamarAPITutor","instruccion","entrada","maxTokens","reject","contentType","max_nuevos_tokens","response","respuesta","Error","xhr","status","init","role","messagesDiv","form","chatInput","submitButton","find","isChatBlocked","scrollToBottom","scrollTop","scrollHeight","showTutorLoader","loader","html","append","removeTutorLoader","remove","animateTutorMessage","htmlMsg","bubble","safeHtml","replace","match","p1","lang","code","text","i","typeChar","length","slice","setTimeout","each","$pre","this","codeText","codeHtml","$actions","$copyBtn","on","$notification","htmlSource","stopPropagation","navigator","clipboard","writeText","catch","fallbackCopyToClipboard","addClass","removeClass","$expandBtn","$modal","hide","target","document","key","is","formattedCode","show","showCodeModal","css","textArea","createElement","value","style","position","left","top","body","appendChild","focus","select","execCommand","err","console","removeChild","showTutor","msg","verificarIntentosCuestionario","callback","actividades","cmid","quizzes","promises","map","paramsContext","contextData","cm","modname","quizid","instance","all","then","attemptPromises","quiz","paramsAttempts","includepreviews","attemptData","attempts","attempt","state","prop","obtenerRecomendaciones","cleanedResponse","jsonMatch","textoExplicativo","substring","index","trim","recomendaciones","mensaje","rec","recomendacion","parseError","message","localStorage","user_id","username","btnIniciarEscaneo","cooldownEscaneo","finally","shiftKey","preventDefault","trigger","val","texto","textoLimpio","toLowerCase","some","saludo","startsWith","esSaludoOMensajeIrrelevante","showUser","message_type","message_text","tutorResponse"],"mappings":"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"}