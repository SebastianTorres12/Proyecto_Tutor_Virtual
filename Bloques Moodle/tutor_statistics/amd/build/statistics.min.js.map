{"version":3,"file":"statistics.min.js","sources":["../src/statistics.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\n/* eslint-disable no-trailing-spaces */\n/* eslint-disable no-undef */\n/* eslint-disable jsdoc/require-jsdoc */\n/* eslint-disable promise/always-return */\n/* eslint-disable max-len */\n/* eslint-disable no-console */\ndefine(['jquery', 'core/str'], function($, str) {\n    // Definición de variables generales para las APIs\n    const API_BD_TUTOR_BASE = 'http://localhost:8080/api/'; // Base URL para la API de base de datos (se añaden endpoints específicos)\n    const API_tutor = 'http://localhost:8000/generar'; // API para generar respuestas del tutor\n\n    // Función para esperar a que Chart.js esté disponible\n    function waitForChart(callback) {\n        if (typeof Chart !== 'undefined') {\n            callback();\n            return;\n        }\n        setTimeout(function() {\n            waitForChart(callback);\n        }, 100);\n    }\n\n    return {\n        init: function() {\n            var statisticsDiv = $('#statistics-content');\n            var isLoading = false;\n            // Eliminar lógica de toggle y solo cargar estadísticas automáticamente\n            cargarEstadisticas();\n\n            function cargarEstadisticas() {\n                if (isLoading) {\n                    return;\n                }\n                isLoading = true;\n                // Obtener la cadena de idioma necesaria\n                var strings = [\n                    {key: 'no_data', component: 'block_tutor_statistics'}\n                ];\n\n                str.get_strings(strings).then(function(translations) {\n                    var noDataString = translations[0];\n                    waitForChart(function() {\n                        // Obtener estadísticas desde la API\n                        $.ajax({\n                            url: `${API_BD_TUTOR_BASE}statistics`,\n                            method: 'GET',\n                            dataType: 'json',\n                            success: function(statisticsResponse) {\n                                $.ajax({\n                                    url: `${API_BD_TUTOR_BASE}messages`,\n                                    method: 'GET',\n                                    dataType: 'json',\n                                    success: function(messagesResponse) {\n                                        // --- Eliminar cualquier gráfico/conclusión previo ---\n                                        var topicChartContainer = $('#top-question-chart').parent();\n                                        $('#top-question-chart').remove();\n                                        $('#top-topic-chart').remove();\n                                        statisticsDiv.find('.conclusion-container').remove();\n                                        // Enviar todos los inputs al tutor para análisis de temas\n                                        var inputMessages = messagesResponse.filter(function(msg) {\n                                            return msg.message_type === 'input';\n                                        });\n                                        var allInputs = inputMessages.map(function(msg) { return msg.message_text; });\n                                        var conclusionPrompt = `\n                                            Actúa como un tutor virtual especializado en Análisis y Diseño de Software. Recibirás estadísticas y todas las preguntas realizadas por los estudiantes (inputs) en el siguiente formato JSON:\n                                            {\n                                                \"top_user\": { \"userfullname\": string, \"total_messages\": number },\n                                                \"total_messages\": number,\n                                                \"peak_hour\": { \"hour_of_day\": number, \"message_count\": number },\n                                                \"total_peak_hour_messages\": number,\n                                                \"inputs\": [string]\n                                            }\n                                            Analiza todas las preguntas y devuelve un array JSON llamado \"temas\" con los 3 temas principales a reforzar (solo nombres de temas, sin explicación). Luego, genera una breve conclusión en español (máximo 50 palabras) recomendando reforzar esos temas para todos los estudiantes del curso, no solo para un usuario. No menciones datos personales ni preguntas exactas.\n                                        `;\n                                        var tutorPayload = {\n                                            top_user: statisticsResponse.top_user,\n                                            total_messages: statisticsResponse.total_messages,\n                                            peak_hour: statisticsResponse.peak_hour,\n                                            total_peak_hour_messages: statisticsResponse.total_peak_hour_messages,\n                                            inputs: allInputs\n                                        };\n                                        $.ajax({\n                                            url: API_tutor,\n                                            method: 'POST',\n                                            contentType: 'application/json',\n                                            data: JSON.stringify({\n                                                instruccion: conclusionPrompt,\n                                                entrada: JSON.stringify(tutorPayload),\n                                                max_nuevos_tokens: 256\n                                            }),\n                                            success: function(apiResponse) {\n                                                isLoading = false;\n                                                // Validar formato de respuesta\n                                                var temas = Array.isArray(apiResponse.temas) ? apiResponse.temas : [];\n                                                var conclusionText = typeof apiResponse.conclusion === 'string' ? apiResponse.conclusion : (apiResponse.respuesta || '');\n                                                // Si no hay array de temas, intentar extraerlos del texto\n                                                if (!temas.length && conclusionText) {\n                                                    var match = conclusionText.match(/temas?:\\s*([\\w\\s,áéíóúÁÉÍÓÚüÜñÑ-]+)/i);\n                                                    if (match && match[1]) {\n                                                        temas = match[1].split(',').map(function(t) { return t.trim(); }).filter(Boolean);\n                                                    }\n                                                }\n                                                // Mostrar gráfico de temas SOLO con los datos del tutor\n                                                topicChartContainer.find('#top-topic-chart').remove();\n                                                topicChartContainer.append('<canvas id=\"top-topic-chart\"></canvas>');\n                                                var topTopicCanvas = document.getElementById('top-topic-chart');\n                                                if (topTopicCanvas) {\n                                                    var topTopicCtx = topTopicCanvas.getContext('2d');\n                                                    new Chart(topTopicCtx, {\n                                                        type: 'doughnut',\n                                                        data: {\n                                                            labels: temas.length ? temas : ['Sin temas detectados'],\n                                                            datasets: [{\n                                                                label: 'Temas a Reforzar',\n                                                                data: temas.length ? temas.map(function() { return 1; }) : [1],\n                                                                backgroundColor: ['#dc3545', '#007bff', '#28a745'],\n                                                                borderColor: ['#c82333', '#0056b3', '#218838'],\n                                                                borderWidth: 1\n                                                            }]\n                                                        },\n                                                        options: {\n                                                            plugins: {\n                                                                legend: {\n                                                                    position: 'bottom',\n                                                                    labels: {\n                                                                        font: { size: 13, weight: 'bold' }\n                                                                    }\n                                                                },\n                                                                tooltip: {\n                                                                    callbacks: {\n                                                                        label: function(context) {\n                                                                            return context.label;\n                                                                        }\n                                                                    }\n                                                                }\n                                                            },\n                                                            animation: {\n                                                                duration: 1200,\n                                                                easing: 'easeOutQuart'\n                                                            }\n                                                        }\n                                                    });\n                                                }\n                                                // Mostrar conclusión\n                                                if (conclusionText) {\n                                                    statisticsDiv.append(`\n                                                        <div class=\"conclusion-container\">\n                                                            <h4>Conclusión del Uso del Tutor Virtual</h4>\n                                                            <p>${conclusionText.replace(/\\n/g, '<br>')}</p>\n                                                        </div>\n                                                    `);\n                                                } else {\n                                                    statisticsDiv.append('<p style=\"color:#c00;\">No se pudo obtener una conclusión válida del tutor.</p>');\n                                                }\n                                            },\n                                            error: function(xhr, status, error) {\n                                                isLoading = false;\n                                                statisticsDiv.append('<p style=\"color:#c00;\">Error al generar la conclusión: ' + error + '</p>');\n                                            }\n                                        });\n                                    },\n                                    error: function(xhr, status, error) {\n                                        isLoading = false;\n                                        statisticsDiv.html('<p style=\"color:#c00;\">Error al cargar los mensajes: ' + error + '</p>');\n                                    }\n                                });\n                                // Gráfico para el usuario más activo (Pie Chart)\n                                var topUserCtx = $('#top-user-chart')[0].getContext('2d');\n                                if (statisticsResponse.top_user && statisticsResponse.total_messages > 0) {\n                                    var topUserMessages = statisticsResponse.top_user.total_messages || 0;\n                                    var otherMessages = statisticsResponse.total_messages - topUserMessages;\n                                    new Chart(topUserCtx, {\n                                        type: 'pie',\n                                        data: {\n                                            labels: [statisticsResponse.top_user.userfullname || 'Usuario Desconocido', 'Otros Usuarios'],\n                                            datasets: [{\n                                                label: 'Número de Mensajes',\n                                                data: [topUserMessages, otherMessages],\n                                                backgroundColor: ['#007bff', '#d3d3d3'],\n                                                borderColor: ['#0056b3', '#a9a9a9'],\n                                                borderWidth: 1\n                                            }]\n                                        },\n                                        options: {\n                                            plugins: {\n                                                legend: {\n                                                    position: 'bottom',\n                                                    labels: {\n                                                        font: { size: 12 }\n                                                    }\n                                                },\n                                                tooltip: {\n                                                    callbacks: {\n                                                        label: function(context) {\n                                                            return context.label + ': ' + context.raw + ' mensajes';\n                                                        }\n                                                    }\n                                                }\n                                            },\n                                            animation: {\n                                                duration: 1000,\n                                                easing: 'easeOutQuart'\n                                            }\n                                        }\n                                    });\n                                } else {\n                                    $('#top-user-chart').replaceWith('<p>' + noDataString + ' (Usuario Más Activo)</p>');\n                                }\n\n                                // Gráfico para la hora de mayor uso (Pie Chart)\n                                var peakHourCtx = $('#peak-hour-chart')[0].getContext('2d');\n                                if (statisticsResponse.peak_hour && statisticsResponse.total_peak_hour_messages > 0) {\n                                    var peakHourMessages = statisticsResponse.peak_hour.message_count || 0;\n                                    var otherHourMessages = statisticsResponse.total_peak_hour_messages - peakHourMessages;\n                                    new Chart(peakHourCtx, {\n                                        type: 'pie',\n                                        data: {\n                                            labels: ['Hora ' + statisticsResponse.peak_hour.hour_of_day, 'Otras Horas'],\n                                            datasets: [{\n                                                label: 'Mensajes en Hora Pico',\n                                                data: [peakHourMessages, otherHourMessages],\n                                                backgroundColor: ['#28a745', '#d3d3d3'],\n                                                borderColor: ['#218838', '#a9a9a9'],\n                                                borderWidth: 1\n                                            }]\n                                        },\n                                        options: {\n                                            plugins: {\n                                                legend: {\n                                                    position: 'bottom',\n                                                    labels: {\n                                                        font: { size: 12 }\n                                                    }\n                                                },\n                                                tooltip: {\n                                                    callbacks: {\n                                                        label: function(context) {\n                                                            return context.label + ': ' + context.raw + ' mensajes';\n                                                        }\n                                                    }\n                                                }\n                                            },\n                                            animation: {\n                                                duration: 1000,\n                                                easing: 'easeOutQuart'\n                                            }\n                                        }\n                                    });\n                                } else {\n                                    $('#peak-hour-chart').replaceWith('<p>' + noDataString + ' (Hora de Mayor Uso)</p>');\n                                }\n                            },\n                            error: function(xhr, status, error) {\n                                isLoading = false;\n                                statisticsDiv.html('<p style=\"color:#c00;\">Error al cargar las estadísticas: ' + error + '</p>');\n                            }\n                        });\n                    });\n                }).fail(function(error) {\n                    isLoading = false;\n                    statisticsDiv.html('<p style=\"color:#c00;\">Error al cargar las estadísticas: No se pudieron cargar las traducciones.</p>');\n                });\n            }\n        }\n    };\n});"],"names":["define","$","str","waitForChart","callback","Chart","setTimeout","init","statisticsDiv","isLoading","get_strings","key","component","then","translations","noDataString","ajax","url","method","dataType","success","statisticsResponse","messagesResponse","topicChartContainer","parent","remove","find","allInputs","filter","msg","message_type","map","message_text","tutorPayload","top_user","total_messages","peak_hour","total_peak_hour_messages","inputs","contentType","data","JSON","stringify","instruccion","entrada","max_nuevos_tokens","apiResponse","temas","Array","isArray","conclusionText","conclusion","respuesta","length","match","split","t","trim","Boolean","append","topTopicCanvas","document","getElementById","topTopicCtx","getContext","type","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","plugins","legend","position","font","size","weight","tooltip","callbacks","context","animation","duration","easing","replace","error","xhr","status","html","topUserCtx","topUserMessages","otherMessages","userfullname","raw","replaceWith","peakHourCtx","peakHourMessages","message_count","otherHourMessages","hour_of_day","fail","cargarEstadisticas"],"mappings":"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"}