{"version":3,"file":"statistics.min.js","sources":["../src/statistics.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\n/* eslint-disable no-trailing-spaces */\n/* eslint-disable no-undef */\n/* eslint-disable jsdoc/require-jsdoc */\n/* eslint-disable promise/always-return */\n/* eslint-disable max-len */\n/* eslint-disable no-console */\ndefine(['jquery', 'core/str'], function($, str) {\n    // Definición de variables generales para las APIs\n    const API_BD_TUTOR_BASE = 'http://localhost:8080/api/'; // Base URL para la API de base de datos (se añaden endpoints específicos)\n    const API_tutor = 'http://localhost:8000/generar'; // API para generar respuestas del tutor\n\n    // Función para esperar a que Chart.js esté disponible\n    function waitForChart(callback) {\n        if (typeof Chart !== 'undefined') {\n            callback();\n            return;\n        }\n        setTimeout(function() {\n            waitForChart(callback);\n        }, 100);\n    }\n\n    return {\n        init: function() {\n            var statisticsDiv = $('#statistics-content');\n\n            // Obtener la cadena de idioma necesaria\n            var strings = [\n                {key: 'no_data', component: 'block_tutor_statistics'}\n            ];\n\n            str.get_strings(strings).then(function(translations) {\n                var noDataString = translations[0];\n\n                // Esperar a que Chart.js esté disponible\n                waitForChart(function() {\n                    // Obtener estadísticas desde la API\n                    $.ajax({\n                        url: `${API_BD_TUTOR_BASE}statistics`, // Usar variable para endpoint GET de estadísticas\n                        method: 'GET',\n                        dataType: 'json',\n                        success: function(response) {\n                            console.log('Estadísticas obtenidas:', response);\n\n                            // Gráfico para el usuario más activo (Pie Chart)\n                            var topUserCtx = $('#top-user-chart')[0].getContext('2d');\n                            if (response.top_user && response.total_messages > 0) {\n                                var topUserMessages = response.top_user.total_messages || 0;\n                                var otherMessages = response.total_messages - topUserMessages;\n                                new Chart(topUserCtx, {\n                                    type: 'pie',\n                                    data: {\n                                        labels: [response.top_user.userfullname || 'Usuario Desconocido', 'Otros Usuarios'],\n                                        datasets: [{\n                                            label: 'Número de Mensajes',\n                                            data: [topUserMessages, otherMessages],\n                                            backgroundColor: ['#007bff', '#d3d3d3'],\n                                            borderColor: ['#0056b3', '#a9a9a9'],\n                                            borderWidth: 1\n                                        }]\n                                    },\n                                    options: {\n                                        plugins: {\n                                            legend: {\n                                                position: 'bottom',\n                                                labels: {\n                                                    font: { size: 12 }\n                                                }\n                                            },\n                                            tooltip: {\n                                                callbacks: {\n                                                    label: function(context) {\n                                                        return context.label + ': ' + context.raw + ' mensajes';\n                                                    }\n                                                }\n                                            }\n                                        },\n                                        animation: {\n                                            duration: 1000,\n                                            easing: 'easeOutQuart'\n                                        }\n                                    }\n                                });\n                            } else {\n                                $('#top-user-chart').replaceWith('<p>' + noDataString + ' (Usuario Más Activo)</p>');\n                            }\n\n                            // Gráfico para la hora de mayor uso (Pie Chart)\n                            var peakHourCtx = $('#peak-hour-chart')[0].getContext('2d');\n                            if (response.peak_hour && response.total_peak_hour_messages > 0) {\n                                var peakHourMessages = response.peak_hour.message_count || 0;\n                                var otherHourMessages = response.total_peak_hour_messages - peakHourMessages;\n                                new Chart(peakHourCtx, {\n                                    type: 'pie',\n                                    data: {\n                                        labels: ['Hora ' + response.peak_hour.hour_of_day, 'Otras Horas'],\n                                        datasets: [{\n                                            label: 'Mensajes en Hora Pico',\n                                            data: [peakHourMessages, otherHourMessages],\n                                            backgroundColor: ['#28a745', '#d3d3d3'],\n                                            borderColor: ['#218838', '#a9a9a9'],\n                                            borderWidth: 1\n                                        }]\n                                    },\n                                    options: {\n                                        plugins: {\n                                            legend: {\n                                                position: 'bottom',\n                                                labels: {\n                                                    font: { size: 12 }\n                                                }\n                                            },\n                                            tooltip: {\n                                                callbacks: {\n                                                    label: function(context) {\n                                                        return context.label + ': ' + context.raw + ' mensajes';\n                                                    }\n                                                }\n                                            }\n                                        },\n                                        animation: {\n                                            duration: 1000,\n                                            easing: 'easeOutQuart'\n                                        }\n                                    }\n                                });\n                            } else {\n                                $('#peak-hour-chart').replaceWith('<p>' + noDataString + ' (Hora de Mayor Uso)</p>');\n                            }\n\n                            // Gráfico para la pregunta más frecuente (Pie Chart)\n                            var topQuestionCtx = $('#top-question-chart')[0].getContext('2d');\n                            if (response.top_question && response.total_questions > 0) {\n                                var topQuestionFrequency = response.top_question.frequency || 0;\n                                var otherQuestionsFrequency = response.total_questions - topQuestionFrequency;\n                                new Chart(topQuestionCtx, {\n                                    type: 'pie',\n                                    data: {\n                                        labels: [\n                                            response.top_question.message_text.length > 30 \n                                                ? response.top_question.message_text.substring(0, 27) + '...' \n                                                : response.top_question.message_text,\n                                            'Otras Preguntas'\n                                        ],\n                                        datasets: [{\n                                            label: 'Frecuencia de la Pregunta',\n                                            data: [topQuestionFrequency, otherQuestionsFrequency],\n                                            backgroundColor: ['#dc3545', '#d3d3d3'],\n                                            borderColor: ['#c82333', '#a9a9a9'],\n                                            borderWidth: 1\n                                        }]\n                                    },\n                                    options: {\n                                        plugins: {\n                                            legend: {\n                                                position: 'bottom',\n                                                labels: {\n                                                    font: { size: 12 }\n                                                }\n                                            },\n                                            tooltip: {\n                                                callbacks: {\n                                                    label: function(context) {\n                                                        return context.label + ': ' + context.raw + ' veces';\n                                                    },\n                                                    title: function(context) {\n                                                        if (context[0].label !== 'Otras Preguntas') {\n                                                            return response.top_question.message_text;\n                                                        }\n                                                        return context[0].label;\n                                                    }\n                                                }\n                                            }\n                                        },\n                                        animation: {\n                                            duration: 1000,\n                                            easing: 'easeOutQuart'\n                                        }\n                                    }\n                                });\n                            } else {\n                                $('#top-question-chart').replaceWith('<p>' + noDataString + ' (Pregunta Más Frecuente)</p>');\n                            }\n\n                            // Enviar estadísticas a la API del tutor para generar una conclusión\n                            var conclusionPrompt = `\n                                Actúa como un tutor virtual especializado en Análisis y Diseño de Software. Recibirás estadísticas sobre el uso del tutor virtual en un curso, en el siguiente formato JSON:\n                                {\n                                    \"top_user\": {\n                                        \"userfullname\": string,\n                                        \"total_messages\": number\n                                    },\n                                    \"total_messages\": number,\n                                    \"peak_hour\": {\n                                        \"hour_of_day\": number,\n                                        \"message_count\": number\n                                    },\n                                    \"total_peak_hour_messages\": number,\n                                    \"top_question\": {\n                                        \"message_text\": string,\n                                        \"frequency\": number\n                                    },\n                                    \"total_questions\": number\n                                }\n                                Genera una conclusión breve en español (máximo 50 palabras) que recomiende un tema a reforzar para el usuario más activo, basado en la pregunta más frecuente. Usa un tono profesional y no menciones datos específicos como nombres o mensajes exactos para proteger la privacidad.\n                            `;\n\n                            $.ajax({\n                                url: API_tutor, // Usar variable para endpoint de generación\n                                method: 'POST',\n                                contentType: 'application/json',\n                                data: JSON.stringify({\n                                    instruccion: conclusionPrompt,\n                                    entrada: JSON.stringify(response),\n                                    max_nuevos_tokens: 128\n                                }),\n                                success: function(apiResponse) {\n                                    console.log('Respuesta de la API /generar (conclusión):', apiResponse);\n                                    if (apiResponse.respuesta) {\n                                        var conclusionText = apiResponse.respuesta.replace(/\\n/g, '<br>');\n                                        statisticsDiv.append(`\n                                            <div class=\"conclusion-container\">\n                                                <h4>Conclusión del Uso del Tutor Virtual</h4>\n                                                <p>${conclusionText}</p>\n                                            </div>\n                                        `);\n                                    } else {\n                                        statisticsDiv.append('<p>Error: No se pudo generar la conclusión.</p>');\n                                    }\n                                },\n                                error: function(xhr, status, error) {\n                                    console.log('Error al generar conclusión:', {xhr, status, error});\n                                    statisticsDiv.append('<p>Error al generar la conclusión: ' + error + '</p>');\n                                }\n                            });\n                        },\n                        error: function(xhr, status, error) {\n                            console.log('Error al obtener estadísticas:', {xhr, status, error});\n                            statisticsDiv.html('<p>Error al cargar las estadísticas: ' + error + '</p>');\n                        }\n                    });\n                });\n            }).fail(function(error) {\n                console.log('Error al cargar cadenas de idioma:', error);\n                statisticsDiv.html('<p>Error al cargar las estadísticas: No se pudieron cargar las traducciones.</p>');\n            });\n        }\n    };\n});"],"names":["define","$","str","waitForChart","callback","Chart","setTimeout","init","statisticsDiv","get_strings","key","component","then","translations","noDataString","ajax","url","method","dataType","success","response","console","log","topUserCtx","getContext","top_user","total_messages","topUserMessages","otherMessages","type","data","labels","userfullname","datasets","label","backgroundColor","borderColor","borderWidth","options","plugins","legend","position","font","size","tooltip","callbacks","context","raw","animation","duration","easing","replaceWith","peakHourCtx","peak_hour","total_peak_hour_messages","peakHourMessages","message_count","otherHourMessages","hour_of_day","topQuestionCtx","top_question","total_questions","topQuestionFrequency","frequency","otherQuestionsFrequency","message_text","length","substring","title","contentType","JSON","stringify","instruccion","entrada","max_nuevos_tokens","apiResponse","respuesta","conclusionText","replace","append","error","xhr","status","html","fail"],"mappings":"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"}