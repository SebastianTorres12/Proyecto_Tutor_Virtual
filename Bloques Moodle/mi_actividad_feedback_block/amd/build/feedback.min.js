define("block_mi_actividad_feedback_block/feedback",["jquery"],(function($){const API_tutor="http://localhost:8000/generar",API_Moodle="http://localhost/webservice/rest/server.php";return{init:function(userid,courseid,cmid,modname){var messagesDiv=$("#feedback-messages"),requestBtn=$("#feedback-request-btn"),cooldown=!1;function mostrarTextoAnimado(element,html){let velocidad=arguments.length>2&&void 0!==arguments[2]?arguments[2]:20;element.append('<div class="typing-tutor"></div>');var target=element.find(".typing-tutor").last(),i=0,partes=html.split("");!function escribir(){i<partes.length?(target.append(partes[i]),i++,setTimeout(escribir,velocidad)):target.removeClass("typing-tutor")}()}function obtenerRetroalimentacion(){var params={wstoken:"10b97b49ec5c5119e48c566de5228f8f",wsfunction:"gradereport_user_get_grade_items",moodlewsrestformat:"json",courseid:courseid,userid:userid},queryString=$.param(params),fullUrl=`${API_Moodle}?${queryString}`;console.log("URL generada para gradereport_user_get_grade_items:",fullUrl),messagesDiv.append("<p><strong>Debug:</strong> Obteniendo calificación de la actividad...</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight),$.ajax({url:fullUrl,method:"GET",dataType:"json",success:function(data){console.log("Respuesta de gradereport_user_get_grade_items:",data);var actividadData=null;if(data.usergrades&&data.usergrades.forEach((user=>{user.gradeitems.forEach((item=>{if(item.cmid==cmid){var grade=null!==item.graderaw?item.graderaw:0;actividadData={userid:user.userid,name:user.userfullname,grade:grade,actividad:item.itemname,feedback:item.feedback||"Sin retroalimentación del profesor.",feedbackformat:item.feedbackformat||0}}}))})),!actividadData)return messagesDiv.append("<p><strong>Tutor:</strong> No se encontró una calificación para esta actividad o aún no ha sido calificada.</p>"),void messagesDiv.scrollTop(messagesDiv[0].scrollHeight);if(1===actividadData.feedbackformat){var tempDiv=$("<div>").html(actividadData.feedback);actividadData.feedback=tempDiv.text()}console.log("Datos de la actividad:",actividadData);var paramsContext={wstoken:"10b97b49ec5c5119e48c566de5228f8f",wsfunction:"core_course_get_course_module",moodlewsrestformat:"json",cmid:cmid},queryStringContext=$.param(paramsContext),fullUrlContext=`${API_Moodle}?${queryStringContext}`;console.log("URL generada para core_course_get_course_module:",fullUrlContext),$.ajax({url:fullUrlContext,method:"GET",dataType:"json",success:function(contextData){if(console.log("Respuesta de core_course_get_course_module:",contextData),!contextData.cm||!contextData.cm.instance)return messagesDiv.append("<p><strong>Tutor:</strong> No se pudo obtener el ID de la actividad.</p>"),void messagesDiv.scrollTop(messagesDiv[0].scrollHeight);actividadData.id=contextData.cm.instance,"quiz"===modname?function(actividadData){var params={wstoken:"10b97b49ec5c5119e48c566de5228f8f",wsfunction:"mod_quiz_get_user_attempts",moodlewsrestformat:"json",quizid:actividadData.id,userid:userid,status:"finished"},queryString=$.param(params),fullUrl=`${API_Moodle}?${queryString}`;console.log("URL generada para mod_quiz_get_user_attempts:",fullUrl),console.log("Usuario ID utilizado:",userid),$.ajax({url:fullUrl,method:"GET",dataType:"json",success:function(data){if(console.log("Respuesta de mod_quiz_get_user_attempts:",data),!data.attempts||0===data.attempts.length)return messagesDiv.append("<p><strong>Tutor:</strong> No se encontraron intentos para este cuestionario.</p>"),void messagesDiv.scrollTop(messagesDiv[0].scrollHeight);var attemptId=data.attempts[data.attempts.length-1].id;console.log("Attempt ID seleccionado:",attemptId);var maxAttempts=3,attemptsMade=data.attempts.length,remainingAttempts=maxAttempts-attemptsMade;remainingAttempts<0&&(remainingAttempts=0),console.log("Intentos realizados:",attemptsMade,"Intentos máximos:",maxAttempts,"Intentos restantes:",remainingAttempts),actividadData.remainingAttempts=remainingAttempts;var paramsAttempt={wstoken:"10b97b49ec5c5119e48c566de5228f8f",wsfunction:"mod_quiz_get_attempt_review",moodlewsrestformat:"json",attemptid:attemptId,page:-1},queryStringAttempt=$.param(paramsAttempt),fullUrlAttempt=`${API_Moodle}?${queryStringAttempt}`;console.log("URL generada para mod_quiz_get_attempt_review:",fullUrlAttempt),$.ajax({url:fullUrlAttempt,method:"GET",dataType:"json",success:function(attemptData){if(console.log("Respuesta de mod_quiz_get_attempt_review:",attemptData),attemptData.warnings&&attemptData.warnings.length>0)return messagesDiv.append("<p><strong>Tutor:</strong> Advertencias: "+attemptData.warnings[0].message+"</p>"),void messagesDiv.scrollTop(messagesDiv[0].scrollHeight);if(!attemptData.questions||0===attemptData.questions.length)return messagesDiv.append("<p><strong>Tutor:</strong> No se encontraron preguntas en el intento.</p>"),void messagesDiv.scrollTop(messagesDiv[0].scrollHeight);var preguntasIncorrectas=[];attemptData.questions.forEach((question=>{var preguntaMatch=question.html.match(/<div class="qtext">(.*?)<\/div>/is),pregunta=preguntaMatch?preguntaMatch[1]:"No se pudo extraer la pregunta",numeroPregunta=question.questionnumber||"Desconocido",estado=question.status||"Desconocido",estadoInterno=question.state||"unknown",respuestaSeleccionadaMatch=question.html.match(/<input[^>]+checked="checked"[^>]*>.*?<div class="flex-fill ms-1">([^<]+)</is),respuestaSeleccionada=respuestaSeleccionadaMatch?respuestaSeleccionadaMatch[1]:"No se pudo extraer la respuesta seleccionada",respuestaCorrectaMatch=question.html.match(/<div class="rightanswer">La respuesta correcta es: ([^<]+)</is),respuestaCorrecta=respuestaCorrectaMatch?respuestaCorrectaMatch[1]:"No se pudo extraer la respuesta correcta",opciones=[],opcionesMatches=question.html.matchAll(/<div class="flex-fill ms-1">([^<]+)<\/div>/gis);for(let match of opcionesMatches)opciones.push(match[1]);"Incorrecta"!==estado&&"gradedwrong"!==estadoInterno||preguntasIncorrectas.push({numero:numeroPregunta,pregunta:pregunta,respuestaSeleccionada:respuestaSeleccionada,respuestaCorrecta:respuestaCorrecta,opciones:opciones,estado:estado})})),actividadData.preguntasIncorrectas=preguntasIncorrectas,0===preguntasIncorrectas.length?(messagesDiv.append("<p><strong>Tutor:</strong> ¡Felicidades! Respondiste todas las preguntas correctamente.</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight)):enviarDatosParaRetroalimentacion(actividadData)},error:function(xhr,status,error){console.log("Error al obtener datos del intento:",{xhr:xhr,status:status,error:error,responseText:xhr.responseText}),messagesDiv.append("<p><strong>Tutor:</strong> Error al obtener datos del intento: "+error+" (Código: "+xhr.status+") - "+(xhr.responseText||"Sin detalles")+"</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight)}})},error:function(xhr,status,error){console.log("Error al obtener intentos:",{xhr:xhr,status:status,error:error,responseText:xhr.responseText}),messagesDiv.append("<p><strong>Tutor:</strong> Error al obtener intentos: "+error+" (Código: "+xhr.status+") - "+(xhr.responseText||"Sin detalles")+"</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight)}})}(actividadData):"assign"===modname?function(actividadData){var paramsAssignment={wstoken:"10b97b49ec5c5119e48c566de5228f8f",wsfunction:"mod_assign_get_assignments",moodlewsrestformat:"json",courseids:[courseid]},queryStringAssignment=$.param(paramsAssignment),fullUrlAssignment=`${API_Moodle}?${queryStringAssignment}`;console.log("URL generada para mod_assign_get_assignments:",fullUrlAssignment),$.ajax({url:fullUrlAssignment,method:"GET",dataType:"json",success:function(assignmentData){console.log("Respuesta de mod_assign_get_assignments:",assignmentData);var assignment=null;if(assignmentData.courses&&assignmentData.courses.length>0&&assignmentData.courses.forEach((course=>{course.assignments.forEach((assign=>{assign.cmid==cmid&&(assignment=assign)}))})),!assignment)return messagesDiv.append("<p><strong>Tutor:</strong> No se encontró información sobre la tarea.</p>"),void messagesDiv.scrollTop(messagesDiv[0].scrollHeight);if(actividadData.title=assignment.name,actividadData.description=assignment.intro||"Sin descripción disponible.",actividadData.introformat=assignment.introformat||0,1===actividadData.introformat){var tempDiv=$("<div>").html(actividadData.description);actividadData.description=tempDiv.text()}var paramsSubmission={wstoken:"10b97b49ec5c5119e48c566de5228f8f",wsfunction:"mod_assign_get_submissions",moodlewsrestformat:"json",assignmentids:[actividadData.id]},queryStringSubmission=$.param(paramsSubmission),fullUrlSubmission=`${API_Moodle}?${queryStringSubmission}`;console.log("URL generada para mod_assign_get_submissions:",fullUrlSubmission),$.ajax({url:fullUrlSubmission,method:"GET",dataType:"json",success:function(submissionData){console.log("Respuesta de mod_assign_get_submissions:",submissionData);var entregaEstudiante=null;submissionData.assignments&&submissionData.assignments.length>0&&(entregaEstudiante=submissionData.assignments[0].submissions.find((sub=>sub.userid==userid)));if(!entregaEstudiante)return actividadData.status="pendiente",actividadData.submissionStatus="No entregada",void enviarDatosParaRetroalimentacion(actividadData);actividadData.status=entregaEstudiante.status||"entregada",actividadData.submissionStatus="submitted"===entregaEstudiante.status?"Entregada":"Borrador","submitted"===actividadData.status&&(actividadData.grade>0?actividadData.status="calificada":actividadData.status="entregada_no_calificada"),enviarDatosParaRetroalimentacion(actividadData)},error:function(xhr,status,error){console.log("Error al obtener entregas:",{xhr:xhr,status:status,error:error}),messagesDiv.append("<p><strong>Tutor:</strong> Error al obtener entregas: "+error+"</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight)}})},error:function(xhr,status,error){console.log("Error al obtener datos de la tarea:",{xhr:xhr,status:status,error:error}),messagesDiv.append("<p><strong>Tutor:</strong> Error al obtener datos de la tarea: "+error+"</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight)}})}(actividadData):(messagesDiv.append("<p><strong>Tutor:</strong> Este tipo de actividad no es compatible para análisis detallado.</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight))},error:function(xhr,status,error){console.log("Error al obtener contextid:",{xhr:xhr,status:status,error:error}),messagesDiv.append("<p><strong>Tutor:</strong> Error al obtener contextid: "+error+"</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight)}})},error:function(xhr,status,error){console.log("Error al obtener calificaciones:",{xhr:xhr,status:status,error:error}),messagesDiv.append("<p><strong>Tutor:</strong> Error al obtener calificaciones: "+error+" (Código: "+xhr.status+")</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight)}})}function enviarDatosParaRetroalimentacion(actividadData){if(messagesDiv.append("<p><strong>Debug:</strong> Enviando datos a la API para retroalimentación...</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight),actividadData.preguntasIncorrectas&&actividadData.preguntasIncorrectas.length>0)if(actividadData.remainingAttempts>0){var promptApoyo=`\n                            Eres un tutor virtual especializado en Análisis y Diseño de Software. Un estudiante ha respondido incorrectamente algunas preguntas en un cuestionario, pero aún tiene ${actividadData.remainingAttempts} intento(s) restante(s). Proporciona retroalimentación de apoyo que identifique los temas principales de las preguntas incorrectas y ofrezca consejos generales para mejorar, sin revelar las respuestas correctas ni detalles específicos de las preguntas.\n\n                            Preguntas incorrectas:\n                            ${actividadData.preguntasIncorrectas.map(((pregunta,index)=>`\n                            Pregunta ${index+1} (Número ${pregunta.numero}): ${pregunta.pregunta}\n                            `)).join("\n")}\n\n                            Identifica los temas principales (por ejemplo, modelado UML, casos de uso, diagramas de clases) y sugiere cómo mejorar en ellos (máximo 150 palabras). Comienza con "¡No te preocupes, estás progresando!" y usa un tono motivador. No menciones respuestas correctas ni hagas referencia a libros o materiales externos.\n                        `;console.log("Prompt para retroalimentación de apoyo:",promptApoyo),$.ajax({url:API_tutor,method:"POST",contentType:"application/json",data:JSON.stringify({instruccion:"Proporciona retroalimentación de apoyo basada en los temas de las preguntas incorrectas.",entrada:promptApoyo,max_nuevos_tokens:256}),success:function(response){if(console.log("Respuesta de la API /generar (apoyo):",response),response.respuesta){var mensaje=`<p><strong>Tutor:</strong><br>${response.respuesta.replace(/\n/g,"<br>")}<br>Tienes ${actividadData.remainingAttempts} intento(s) restante(s). ¡Sigue practicando!</p>`;mostrarTextoAnimado(messagesDiv,mensaje),messagesDiv.scrollTop(messagesDiv[0].scrollHeight)}else messagesDiv.append("<p><strong>Tutor:</strong> Error: No se pudo generar la retroalimentación de apoyo.</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight)},error:function(xhr,status,error){console.log("Error al obtener retroalimentación de apoyo:",{xhr:xhr,status:status,error:error,responseText:xhr.responseText}),messagesDiv.append("<p><strong>Tutor:</strong> Error al obtener retroalimentación de apoyo: "+error+" (Código: "+xhr.status+") - "+(xhr.responseText||"Sin detalles")+"</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight)}})}else{var promesas=actividadData.preguntasIncorrectas.map((pregunta=>{var prompt=`\n                                Eres un tutor virtual especializado en Análisis y Diseño de Software. Explica por qué la respuesta correcta es adecuada para la siguiente pregunta de un cuestionario, considerando el contexto y las opciones disponibles.\n\n                                **Pregunta**: ${pregunta.pregunta}\n                                **Respuesta seleccionada**: ${pregunta.respuestaSeleccionada} (incorrecta)\n                                **Respuesta correcta**: ${pregunta.respuestaCorrecta}\n                                **Opciones**: ${pregunta.opciones.join(", ")}\n\n                                Explica por qué "${pregunta.respuestaCorrecta}" es correcta y por qué "${pregunta.respuestaSeleccionada}" no lo es. Usa un lenguaje claro, educativo y motivador (máximo 100 palabras).\n                            `;return console.log("Prompt para retroalimentación detallada:",prompt),$.ajax({url:API_tutor,method:"POST",contentType:"application/json",data:JSON.stringify({instruccion:"Proporciona una explicación clara y detallada.",entrada:prompt,max_nuevos_tokens:256}),success:function(response){if(console.log("Respuesta de la API /generar:",response),response.respuesta){var mensaje=`<p><strong>Tutor:</strong> Pregunta ${pregunta.numero}: "${pregunta.pregunta}":<br><strong>Respondiste:</strong> "${pregunta.respuestaSeleccionada}" (Incorrecta).<br><strong>Correcta:</strong> "${pregunta.respuestaCorrecta}".<br><strong>Explicación:</strong> ${response.respuesta}</p>`;mostrarTextoAnimado(messagesDiv,mensaje),messagesDiv.scrollTop(messagesDiv[0].scrollHeight)}},error:function(xhr,status,error){console.log("Error al obtener retroalimentación detallada:",{xhr:xhr,status:status,error:error,responseText:xhr.responseText}),messagesDiv.append("<p><strong>Tutor:</strong> Error al obtener retroalimentación para la Pregunta ${pregunta.numero}: "+error+" (Código: "+xhr.status+") - "+(xhr.responseText||"Sin detalles")+"</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight)}})}));Promise.all(promesas).then((()=>{if(console.log("Todas las retroalimentaciones detalladas procesadas."),actividadData.grade<7){var promptRefuerzo=`\n                                    Eres un tutor virtual especializado en Análisis y Diseño de Software. Un estudiante obtuvo una calificación de ${actividadData.grade} en un cuestionario (escala 0-10). Propón una actividad de refuerzo para mejorar en los temas de los preguntas incorrectas:\n\n                                    ${actividadData.preguntasIncorrectas.map(((pregunta,index)=>`\n                                    Pregunta ${index+1} (Número ${pregunta.numero}): ${pregunta.pregunta}\n                                    Respuesta seleccionada: ${pregunta.respuestaSeleccionada} (incorrecta)\n                                    Respuesta correcta: ${pregunta.respuestaCorrecta}\n                                    `)).join("\n")}\n\n                                    Identifica los temas de los errores y propone una actividad práctica y breve (máximo 200 palabras) que aborde todos los temas. Comienza con "¡Vamos a reforzar tus conocimientos!" and usa un tono motivador. No menciones libros ni materiales externos.\n                                `;console.log("Prompt para actividad de refuerzo:",promptRefuerzo),$.ajax({url:API_tutor,method:"POST",contentType:"application/json",data:JSON.stringify({instruccion:"Proporciona una actividad de refuerzo basada en los errores del estudiante.",entrada:promptRefuerzo,max_nuevos_tokens:256}),success:function(response){if(console.log("Respuesta de la API /generar (refuerzo):",response),response.respuesta){var actividadFormateada=response.respuesta.replace(/\n/g,"<br>");mostrarTextoAnimado(messagesDiv,`<p><strong>Tutor:</strong><br><strong>Actividad de refuerzo:</strong><br>${actividadFormateada}</p>`),messagesDiv.scrollTop(messagesDiv[0].scrollHeight)}else messagesDiv.append("<p><strong>Tutor:</strong> Error: No se pudo generar la actividad de refuerzo.</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight)},error:function(xhr,status,error){console.log("Error al obtener actividad de refuerzo:",{xhr:xhr,status:status,error:error,responseText:xhr.responseText}),messagesDiv.append("<p><strong>Tutor:</strong> Error al generar actividad de refuerzo: "+error+" (Código: "+xhr.status+") - "+(xhr.responseText||"Sin detalles")+"</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight)}})}})).catch((error=>{console.log("Error al procesar retroalimentaciones detalladas:",error),messagesDiv.append("<p><strong>Tutor:</strong> Error al procesar retroalimentaciones: "+error+"</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight)}))}else $.ajax({url:API_tutor,method:"POST",contentType:"application/json",data:JSON.stringify({instruccion:'\n                    Actúa como un tutor virtual especializado en la enseñanza de Análisis y Diseño de Software. Tu tarea es proporcionar retroalimentación educativa a un estudiante basada en el estado de una tarea. Recibirás los datos en el formato: \n                    {\n                        "userid": number, \n                        "name": string, \n                        "grade": number, \n                        "actividad": string, \n                        "title": string, \n                        "description": string, \n                        "status": string ("pendiente", "entregada_no_calificada", "calificada"), \n                        "submissionStatus": string, \n                        "feedback": string\n                    }\n                    \n                    - Si el estado es "pendiente", analiza el título y la descripción de la tarea y proporciona recomendaciones específicas para que el estudiante la complete exitosamente.\n                    - Si el estado es "entregada_no_calificada", informa al estudiante que su tarea está en proceso de evaluación y sugiere cómo puede prepararse para futuras tareas similares.\n                    - Si el estado es "calificada", analiza la calificación y la retroalimentación del profesor para proporcionar retroalimentación adicional. Explica qué hizo bien el estudiante, qué puede mejorar, y sugiere pasos específicos para futuras tareas.\n                    \n                    Devuelve la retroalimentación en formato texto, en español, con un tono profesional y motivador.\n                ',entrada:JSON.stringify(actividadData),max_nuevos_tokens:256}),success:function(response){if(console.log("Respuesta de la API /generar (tarea):",response),response.respuesta){var retroalimentacionFormateada=response.respuesta.replace(/\n/g,"<br>"),mensaje=`<p><strong>Tutor:</strong> Hola ${actividadData.name}, aquí tienes la retroalimentación para "${actividadData.actividad}":<br>${retroalimentacionFormateada}</p>`;mostrarTextoAnimado(messagesDiv,mensaje),messagesDiv.scrollTop(messagesDiv[0].scrollHeight)}else messagesDiv.append("<p><strong>Tutor:</strong> Error: Respuesta inválida de la API.</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight)},error:function(xhr,status,error){console.log("Error al obtener retroalimentación de tarea:",{xhr:xhr,status:status,error:error,responseText:xhr.responseText}),messagesDiv.append("<p><strong>Tutor:</strong> Error al obtener retroalimentación: "+error+" (Código: "+xhr.status+") - "+(xhr.responseText||"Sin detalles")+"</p>"),messagesDiv.scrollTop(messagesDiv[0].scrollHeight)}})}requestBtn.length&&requestBtn.on("click",(function(){if(cooldown)return messagesDiv.append("<p><strong>Espera unos segundos antes de volver a solicitar retroalimentación.</strong></p>"),void messagesDiv.scrollTop(messagesDiv[0].scrollHeight);cooldown=!0,requestBtn.prop("disabled",!0),obtenerRetroalimentacion(),setTimeout((function(){cooldown=!1,requestBtn.prop("disabled",!1)}),1e4)}))}}}));

//# sourceMappingURL=feedback.min.js.map