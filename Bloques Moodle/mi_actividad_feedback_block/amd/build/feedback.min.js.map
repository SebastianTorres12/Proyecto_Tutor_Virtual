{"version":3,"file":"feedback.min.js","sources":["../src/feedback.js"],"sourcesContent":["/* eslint-disable promise/no-nesting */\n/* eslint-disable promise/always-return */\n/* eslint-disable camelcase */\n/* eslint-disable jsdoc/require-jsdoc */\n/* eslint-disable jsdoc/require-param */\n/* eslint-disable max-len */\ndefine(['jquery'], function($) {\n    // Definición de variables generales para las APIs\n    const API_tutor = 'http://localhost:8000/generar'; // API local para generar retroalimentación del tutor\n    const API_Moodle = 'http://localhost/webservice/rest/server.php'; // API de Moodle para servicios web\n    const API_BD_TUTOR_BASE = 'http://localhost:8080/api/';\n\n    // Función para llamar a la API local\n    function llamarAPITutor(instruccion, entrada, maxTokens) {\n        return new Promise(function(resolve, reject) {\n            $.ajax({\n                url: API_tutor,\n                method: 'POST',\n                contentType: 'application/json',\n                data: JSON.stringify({\n                    instruccion: instruccion,\n                    entrada: entrada,\n                    max_nuevos_tokens: maxTokens || 256\n                }),\n                success: function(response) {\n                    if (response.respuesta) {\n                        resolve({ respuesta: response.respuesta });\n                    } else {\n                        reject(new Error('Respuesta inválida de la API'));\n                    }\n                },\n                error: function(xhr, status, error) {\n                    reject(new Error(error));\n                }\n            });\n        });\n    }\n\n    return {\n        init: function(userid, courseid, cmid, modname) {\n            var messagesDiv = $('#feedback-messages');\n            var requestBtn = $('#feedback-request-btn');\n            var cooldown = false;\n            var cooldownTime = 10000; // 10 segundos (puedes cambiar a 5000 para 5 segundos)\n\n            // Loader visual para el tutor\n            function showTutorLoader() {\n                var loader = $('<div class=\"tutor-bubble tutor-loader\"></div>').html('<span><em>El tutor está escribiendo...</em></span>');\n                messagesDiv.append(loader);\n                messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n            }\n            function removeTutorLoader() {\n                messagesDiv.find('.tutor-loader').remove();\n            }\n\n            // --- NUEVA FUNCIÓN PARA ANIMAR EL TEXTO EN BURBUJA Y RESPETAR HTML (ESTILO CHAT) ---\n            function mostrarTextoAnimado(element, html, velocidad = 20) {\n                removeTutorLoader();\n                var bubble = $('<div class=\"tutor-bubble typing-tutor\"></div>');\n                bubble.append('<span></span>');\n                element.append(bubble);\n                var span = bubble.find('span');\n                // Mejorar saltos de línea para mensajes largos\n                var safeHtml = html\n                    .replace(/\\*\\*([^*]+)\\*\\*/g, function(match, p1) { return '<b>' + p1.replace(/\\n/g, '<br>') + '</b>'; })\n                    .replace(/```([a-zA-Z]*)\\n([\\s\\S]*?)```/g, function(match, lang, code) {\n                        return '<pre><code>' + $('<div>').text(code).html().replace(/\\n/g, '<br>') + '</code></pre>';\n                    })\n                    .replace(/\\n{2,}/g, '<br><br>')\n                    .replace(/\\n/g, '<br>')\n                    .replace(/<(?!br\\s*\\/?>|b>|\\/b>|strong>|\\/strong>|i>|\\/i>|pre>|\\/pre>|code>|\\/code>)[^>]+>/gi, '');\n                var i = 0;\n                function typeChar() {\n                    if (i <= safeHtml.length) {\n                        span.html(safeHtml.slice(0, i));\n                        element.scrollTop(element[0].scrollHeight);\n                        i++;\n                        setTimeout(typeChar, velocidad);\n                    } else {\n                        span.html(safeHtml);\n                        bubble.removeClass('typing-tutor');\n                        element.scrollTop(element[0].scrollHeight);\n                        bubble.find('pre code').each(function() {\n                            var codeHtml = $(this).html();\n                            var formattedCode = codeHtml.replace(/<br\\s*\\/?>/gi, '\\n');\n                            $(this).text(formattedCode);\n                        });\n                    }\n                }\n                typeChar();\n            }\n            // --- FIN NUEVA FUNCIÓN ---\n\n            /**\n             * Obtiene la calificación, contenido y respuestas del usuario para la actividad específica.\n             */\n            function obtenerRetroalimentacion() {\n                var params = {\n                    wstoken: '10b97b49ec5c5119e48c566de5228f8f',\n                    wsfunction: 'gradereport_user_get_grade_items',\n                    moodlewsrestformat: 'json',\n                    courseid: courseid,\n                    userid: userid\n                };\n\n                var queryString = $.param(params);\n                var fullUrl = `${API_Moodle}?${queryString}`;\n\n                showTutorLoader();\n                $.ajax({\n                    url: fullUrl,\n                    method: 'GET',\n                    dataType: 'json',\n                    success: function(data) {\n                        removeTutorLoader();\n\n                        var actividadData = null;\n                        if (data.usergrades) {\n                            data.usergrades.forEach(user => {\n                                user.gradeitems.forEach(item => {\n                                    if (item.cmid == cmid) {\n                                        var grade = item.graderaw !== null ? item.graderaw : 0;\n                                        actividadData = {\n                                            userid: user.userid,\n                                            name: user.userfullname,\n                                            grade: grade,\n                                            actividad: item.itemname,\n                                            feedback: item.feedback || 'Sin retroalimentación del profesor.',\n                                            feedbackformat: item.feedbackformat || 0\n                                        };\n                                    }\n                                });\n                            });\n                        }\n\n                        if (!actividadData) {\n                            messagesDiv.append('<p><strong>Tutor:</strong> No se encontró una calificación para esta actividad o aún no ha sido calificada.</p>');\n                            messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                            return;\n                        }\n\n                        if (actividadData.feedbackformat === 1) {\n                            var tempDiv = $('<div>').html(actividadData.feedback);\n                            actividadData.feedback = tempDiv.text();\n                        }\n\n                        var paramsContext = {\n                            wstoken: '10b97b49ec5c5119e48c566de5228f8f',\n                            wsfunction: 'core_course_get_course_module',\n                            moodlewsrestformat: 'json',\n                            cmid: cmid\n                        };\n\n                        var queryStringContext = $.param(paramsContext);\n                        var fullUrlContext = `${API_Moodle}?${queryStringContext}`;\n\n                        $.ajax({\n                            url: fullUrlContext,\n                            method: 'GET',\n                            dataType: 'json',\n                            success: function(contextData) {\n                                removeTutorLoader();\n\n                                if (!contextData.cm || !contextData.cm.instance) {\n                                    messagesDiv.append('<p><strong>Tutor:</strong> No se pudo obtener el ID de la actividad.</p>');\n                                    messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                    return;\n                                }\n\n                                actividadData.id = contextData.cm.instance;\n\n                                if (modname === 'quiz') {\n                                    obtenerDatosCuestionario(actividadData);\n                                } else if (modname === 'assign') {\n                                    obtenerDatosTarea(actividadData);\n                                } else {\n                                    messagesDiv.append('<p><strong>Tutor:</strong> Este tipo de actividad no es compatible para análisis detallado.</p>');\n                                    messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                }\n                            },\n                            error: function() {\n                                removeTutorLoader();\n                                messagesDiv.append('<p><strong>Tutor:</strong> Error al obtener contextid.</p>');\n                                messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                            }\n                        });\n                    },\n                    error: function() {\n                        removeTutorLoader();\n                        messagesDiv.append('<p><strong>Tutor:</strong> Error al obtener calificaciones.</p>');\n                        messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                    }\n                });\n            }\n\n            /**\n             * Obtiene las preguntas y respuestas del estudiante para un cuestionario.\n             */\n            function obtenerDatosCuestionario(actividadData) {\n                var params = {\n                    wstoken: '10b97b49ec5c5119e48c566de5228f8f',\n                    wsfunction: 'mod_quiz_get_user_attempts',\n                    moodlewsrestformat: 'json',\n                    quizid: actividadData.id,\n                    userid: userid,\n                    status: 'finished'\n                };\n\n                var queryString = $.param(params);\n                var fullUrl = `${API_Moodle}?${queryString}`;\n\n                showTutorLoader();\n                $.ajax({\n                    url: fullUrl,\n                    method: 'GET',\n                    dataType: 'json',\n                    success: function(data) {\n                        removeTutorLoader();\n\n                        if (!data.attempts || data.attempts.length === 0) {\n                            messagesDiv.append('<p><strong>Tutor:</strong> No se encontraron intentos para este cuestionario.</p>');\n                            messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                            return;\n                        }\n\n                        var ultimoIntento = data.attempts[data.attempts.length - 1];\n                        var attemptId = ultimoIntento.id;\n\n                        // Establecer número máximo de intentos fijo\n                        var maxAttempts = 3;\n                        var attemptsMade = data.attempts.length;\n                        var remainingAttempts = maxAttempts - attemptsMade;\n\n                        if (remainingAttempts < 0) {\n                            remainingAttempts = 0; // Por si hay un error en los datos\n                        }\n\n                        actividadData.remainingAttempts = remainingAttempts;\n\n                        // Obtener detalles del intento\n                        var paramsAttempt = {\n                            wstoken: '10b97b49ec5c5119e48c566de5228f8f',\n                            wsfunction: 'mod_quiz_get_attempt_review',\n                            moodlewsrestformat: 'json',\n                            attemptid: attemptId,\n                            page: -1\n                        };\n\n                        var queryStringAttempt = $.param(paramsAttempt);\n                        var fullUrlAttempt = `${API_Moodle}?${queryStringAttempt}`;\n\n                        $.ajax({\n                            url: fullUrlAttempt,\n                            method: 'GET',\n                            dataType: 'json',\n                            success: function(attemptData) {\n                                removeTutorLoader();\n\n                                if (attemptData.warnings && attemptData.warnings.length > 0) {\n                                    messagesDiv.append('<p><strong>Tutor:</strong> Advertencias: ' + attemptData.warnings[0].message + '</p>');\n                                    messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                    return;\n                                }\n\n                                if (!attemptData.questions || attemptData.questions.length === 0) {\n                                    messagesDiv.append('<p><strong>Tutor:</strong> No se encontraron preguntas en el intento.</p>');\n                                    messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                    return;\n                                }\n\n                                var preguntasIncorrectas = [];\n                                attemptData.questions.forEach(question => {\n                                    var preguntaMatch = question.html.match(/<div class=\"qtext\">(.*?)<\\/div>/is);\n                                    var pregunta = preguntaMatch ? preguntaMatch[1] : 'No se pudo extraer la pregunta';\n\n                                    var numeroPregunta = question.questionnumber || 'Desconocido';\n\n                                    var estado = question.status || 'Desconocido';\n                                    var estadoInterno = question.state || 'unknown';\n\n                                    var respuestaSeleccionadaMatch = question.html.match(/<input[^>]+checked=\"checked\"[^>]*>.*?<div class=\"flex-fill ms-1\">([^<]+)</is);\n                                    var respuestaSeleccionada = respuestaSeleccionadaMatch ? respuestaSeleccionadaMatch[1] : 'No se pudo extraer la respuesta seleccionada';\n\n                                    var respuestaCorrectaMatch = question.html.match(/<div class=\"rightanswer\">La respuesta correcta es: ([^<]+)</is);\n                                    var respuestaCorrecta = respuestaCorrectaMatch ? respuestaCorrectaMatch[1] : 'No se pudo extraer la respuesta correcta';\n\n                                    var opciones = [];\n                                    var opcionesMatches = question.html.matchAll(/<div class=\"flex-fill ms-1\">([^<]+)<\\/div>/gis);\n                                    for (let match of opcionesMatches) {\n                                        opciones.push(match[1]);\n                                    }\n\n                                    if (estado === 'Incorrecta' || estadoInterno === 'gradedwrong') {\n                                        preguntasIncorrectas.push({\n                                            numero: numeroPregunta,\n                                            pregunta: pregunta,\n                                            respuestaSeleccionada: respuestaSeleccionada,\n                                            respuestaCorrecta: respuestaCorrecta,\n                                            opciones: opciones,\n                                            estado: estado\n                                        });\n                                    }\n                                });\n\n                                actividadData.preguntasIncorrectas = preguntasIncorrectas;\n\n                                if (preguntasIncorrectas.length === 0) {\n                                    messagesDiv.append('<p><strong>Tutor:</strong> ¡Felicidades! Respondiste todas las preguntas correctamente.</p>');\n                                    messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                } else {\n                                    enviarDatosParaRetroalimentacion(actividadData);\n                                }\n                            },\n                            error: function() {\n                                removeTutorLoader();\n                                messagesDiv.append('<p><strong>Tutor:</strong> Error al obtener datos del intento.</p>');\n                                messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                            }\n                        });\n                    },\n                    error: function() {\n                        removeTutorLoader();\n                        messagesDiv.append('<p><strong>Tutor:</strong> Error al obtener intentos.</p>');\n                        messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                    }\n                });\n            }\n\n            /**\n             * Obtiene el contenido enviado por el estudiante para una tarea.\n             */\n            function obtenerDatosTarea(actividadData) {\n                var paramsAssignment = {\n                    wstoken: '10b97b49ec5c5119e48c566de5228f8f',\n                    wsfunction: 'mod_assign_get_assignments',\n                    moodlewsrestformat: 'json',\n                    courseids: [courseid]\n                };\n\n                var queryStringAssignment = $.param(paramsAssignment);\n                var fullUrlAssignment = `${API_Moodle}?${queryStringAssignment}`;\n\n                showTutorLoader();\n                $.ajax({\n                    url: fullUrlAssignment,\n                    method: 'GET',\n                    dataType: 'json',\n                    success: function(assignmentData) {\n                        removeTutorLoader();\n\n                        var assignment = null;\n                        if (assignmentData.courses && assignmentData.courses.length > 0) {\n                            assignmentData.courses.forEach(course => {\n                                course.assignments.forEach(assign => {\n                                    if (assign.cmid == cmid) {\n                                        assignment = assign;\n                                    }\n                                });\n                            });\n                        }\n\n                        if (!assignment) {\n                            messagesDiv.append('<p><strong>Tutor:</strong> No se encontró información sobre la tarea.</p>');\n                            messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                            return;\n                        }\n\n                        actividadData.title = assignment.name;\n                        actividadData.description = assignment.intro || 'Sin descripción disponible.';\n                        actividadData.introformat = assignment.introformat || 0;\n\n                        if (actividadData.introformat === 1) {\n                            var tempDiv = $('<div>').html(actividadData.description);\n                            actividadData.description = tempDiv.text();\n                        }\n\n                        var paramsSubmission = {\n                            wstoken: '10b97b49ec5c5119e48c566de5228f8f',\n                            wsfunction: 'mod_assign_get_submissions',\n                            moodlewsrestformat: 'json',\n                            assignmentids: [actividadData.id]\n                        };\n\n                        var queryStringSubmission = $.param(paramsSubmission);\n                        var fullUrlSubmission = `${API_Moodle}?${queryStringSubmission}`;\n\n                        $.ajax({\n                            url: fullUrlSubmission,\n                            method: 'GET',\n                            dataType: 'json',\n                            success: function(submissionData) {\n                                removeTutorLoader();\n\n                                var entregaEstudiante = null;\n                                if (submissionData.assignments && submissionData.assignments.length > 0) {\n                                    var submissions = submissionData.assignments[0].submissions;\n                                    entregaEstudiante = submissions.find(sub => sub.userid == userid);\n                                }\n\n                                if (!entregaEstudiante) {\n                                    actividadData.status = 'pendiente';\n                                    actividadData.submissionStatus = 'No entregada';\n                                    enviarDatosParaRetroalimentacion(actividadData);\n                                    return;\n                                }\n\n                                actividadData.status = entregaEstudiante.status || 'entregada';\n                                actividadData.submissionStatus = entregaEstudiante.status === 'submitted' ? 'Entregada' : 'Borrador';\n\n                                if (actividadData.status === 'submitted') {\n                                    if (actividadData.grade > 0) {\n                                        actividadData.status = 'calificada';\n                                    } else {\n                                        actividadData.status = 'entregada_no_calificada';\n                                    }\n                                }\n\n                                enviarDatosParaRetroalimentacion(actividadData);\n                            },\n                            error: function() {\n                                removeTutorLoader();\n                                messagesDiv.append('<p><strong>Tutor:</strong> Error al obtener entregas.</p>');\n                                messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                            }\n                        });\n                    },\n                    error: function() {\n                        removeTutorLoader();\n                        messagesDiv.append('<p><strong>Tutor:</strong> Error al obtener datos de la tarea.</p>');\n                        messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                    }\n                });\n            }\n\n            /**\n             * Envía los datos a la API para obtener retroalimentación detallada.\n             */\n            function enviarDatosParaRetroalimentacion(actividadData) {\n                showTutorLoader();\n                // Guardar la entrada del usuario (input)\n                $.ajax({\n                    url: `${API_BD_TUTOR_BASE}messages/save`,\n                    method: 'POST',\n                    data: JSON.stringify({\n                        user_id: userid,\n                        message_type: 'feed_input',\n                        message_text: JSON.stringify(actividadData)\n                    }),\n                    contentType: 'application/json'\n                });\n                var instruccionRetro = `\n                    Actúa como un tutor virtual especializado en la enseñanza de Análisis y Diseño de Software. Tu tarea es proporcionar retroalimentación educativa a un estudiante basada en el estado de una tarea. Recibirás los datos en el formato: \n                    {\n                        \"userid\": number, \n                        \"name\": string, \n                        \"grade\": number, \n                        \"actividad\": string, \n                        \"title\": string, \n                        \"description\": string, \n                        \"status\": string (\"pendiente\", \"entregada_no_calificada\", \"calificada\"), \n                        \"submissionStatus\": string, \n                        \"feedback\": string\n                    }\n                    \n                    - Si el estado es \"pendiente\", analiza el título y la descripción de la tarea y proporciona recomendaciones específicas para que el estudiante la complete exitosamente.\n                    - Si el estado es \"entregada_no_calificada\", informa al estudiante que su tarea está en proceso de evaluación y sugiere cómo puede prepararse para futuras tareas similares.\n                    - Si el estado es \"calificada\", analiza la calificación y la retroalimentación del profesor para proporcionar retroalimentación adicional. Explica qué hizo bien el estudiante, qué puede mejorar, y sugiere pasos específicos para futuras tareas.\n                    \n                    Devuelve la retroalimentación en formato texto, en español, con un tono profesional y motivador.\n                `;\n\n                if (actividadData.preguntasIncorrectas && actividadData.preguntasIncorrectas.length > 0) {\n                    if (actividadData.remainingAttempts > 0) {\n                        // Retroalimentación de apoyo para intentos restantes\n                        var promptApoyo = `\n                            Eres un tutor virtual especializado en Análisis y Diseño de Software. Un estudiante ha respondido incorrectamente algunas preguntas en un cuestionario, pero aún tiene ${actividadData.remainingAttempts} intento(s) restante(s). Proporciona retroalimentación de apoyo que identifique los temas principales de las preguntas incorrectas y ofrezca consejos generales para mejorar, sin revelar las respuestas correctas ni detalles específicos de las preguntas.\n\n                            Preguntas incorrectas:\n                            ${actividadData.preguntasIncorrectas.map((pregunta, index) => `\n                            Pregunta ${index + 1} (Número ${pregunta.numero}): ${pregunta.pregunta}\n                            `).join('\\n')}\n\n                            Identifica los temas principales (por ejemplo, modelado UML, casos de uso, diagramas de clases) y sugiere cómo mejorar en ellos (máximo 150 palabras). Comienza con \"¡No te preocupes, estás progresando!\" y usa un tono motivador. No menciones respuestas correctas ni hagas referencia a libros o materiales externos.\n                        `;\n\n                        llamarAPITutor(\"Proporciona retroalimentación de apoyo basada en los temas de las preguntas incorrectas.\", promptApoyo, 256)\n                            .then(function(response) {\n                                removeTutorLoader();\n                                if (response.respuesta) {\n                                    var retroalimentacionFormateada = response.respuesta.replace(/\\n/g, '<br>');\n                                    var mensaje = `<p><strong>Tutor:</strong><br>${retroalimentacionFormateada}<br>Tienes ${actividadData.remainingAttempts} intento(s) restante(s). ¡Sigue practicando!</p>`;\n                                    mostrarTextoAnimado(messagesDiv, mensaje);\n                                    messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                    // Guardar la respuesta del tutor (output)\n                                    $.ajax({\n                                        url: `${API_BD_TUTOR_BASE}messages/save`,\n                                        method: 'POST',\n                                        data: JSON.stringify({\n                                            user_id: userid,\n                                            message_type: 'feed_output',\n                                            message_text: response.respuesta\n                                        }),\n                                        contentType: 'application/json'\n                                    });\n                                } else {\n                                    messagesDiv.append('<p><strong>Tutor:</strong> Error: No se pudo generar la retroalimentación de apoyo.</p>');\n                                    messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                }\n                            })\n                            .catch(function() {\n                                removeTutorLoader();\n                                messagesDiv.append('<p><strong>Tutor:</strong> Error al obtener retroalimentación de apoyo.</p>');\n                                messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                            });\n                    } else {\n                        // Retroalimentación detallada y actividad de refuerzo cuando no hay intentos\n                        var promesas = actividadData.preguntasIncorrectas.map(pregunta => {\n                            var prompt = `\n                                Eres un tutor virtual especializado en Análisis y Diseño de Software. Explica por qué la respuesta correcta es adecuada para la siguiente pregunta de un cuestionario, considerando el contexto y las opciones disponibles.\n\n                                **Pregunta**: ${pregunta.pregunta}\n                                **Respuesta seleccionada**: ${pregunta.respuestaSeleccionada} (incorrecta)\n                                **Respuesta correcta**: ${pregunta.respuestaCorrecta}\n                                **Opciones**: ${pregunta.opciones.join(', ')}\n\n                                Explica por qué \"${pregunta.respuestaCorrecta}\" es correcta y por qué \"${pregunta.respuestaSeleccionada}\" no lo es. Usa un lenguaje claro, educativo y motivador (máximo 100 palabras).\n                            `;\n\n                            return llamarAPITutor(\"Proporciona una explicación clara y detallada.\", prompt, 256)\n                                .then(function(response) {\n                                    removeTutorLoader();\n                                    if (response.respuesta) {\n                                        var mensaje = `<p><strong>Tutor:</strong> Pregunta ${pregunta.numero}: \"${pregunta.pregunta}\":<br>` +\n                                            `<strong>Respondiste:</strong> \"${pregunta.respuestaSeleccionada}\" (Incorrecta).<br>` +\n                                            `<strong>Correcta:</strong> \"${pregunta.respuestaCorrecta}\".<br>` +\n                                            `<strong>Explicación:</strong> ${response.respuesta}</p>`;\n                                        mostrarTextoAnimado(messagesDiv, mensaje);\n                                        messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                        // Guardar la respuesta del tutor (output)\n                                        $.ajax({\n                                            url: `${API_BD_TUTOR_BASE}messages/save`,\n                                            method: 'POST',\n                                            data: JSON.stringify({\n                                                user_id: userid,\n                                                message_type: 'feed_output',\n                                                message_text: response.respuesta\n                                            }),\n                                            contentType: 'application/json'\n                                        });\n                                    }\n                                })\n                                .catch(function() {\n                                    removeTutorLoader();\n                                    messagesDiv.append('<p><strong>Tutor:</strong> Error al obtener retroalimentación para la Pregunta.</p>');\n                                    messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                });\n                        });\n                        Promise.all(promesas).then(() => {\n                            if (actividadData.grade < 7) {\n                                var promptRefuerzo = `\n                                    Eres un tutor virtual especializado en Análisis y Diseño de Software. Un estudiante obtuvo una calificación de ${actividadData.grade} en un cuestionario (escala 0-10). Propón una actividad de refuerzo para mejorar en los temas de los preguntas incorrectas:\n\n                                    ${actividadData.preguntasIncorrectas.map((pregunta, index) => `\n                                    Pregunta ${index + 1} (Número ${pregunta.numero}): ${pregunta.pregunta}\n                                    Respuesta seleccionada: ${pregunta.respuestaSeleccionada} (incorrecta)\n                                    Respuesta correcta: ${pregunta.respuestaCorrecta}\n                                    `).join('\\n')}\n\n                                    Identifica los temas de los errores y propone una actividad práctica y breve (máximo 200 palabras) que aborde todos los temas. Comienza con \"¡Vamos a reforzar tus conocimientos!\" and usa un tono motivador. No menciones libros ni materiales externos.\n                                `;\n\n                                return llamarAPITutor(\"Proporciona una actividad de refuerzo basada en los errores del estudiante.\", promptRefuerzo, 256)\n                                    .then(function(response) {\n                                        removeTutorLoader();\n                                        if (response.respuesta) {\n                                            var actividadFormateada = response.respuesta.replace(/\\n/g, '<br>');\n                                            var mensaje = `<p><strong>Tutor:</strong><br><strong>Actividad de refuerzo:</strong><br>${actividadFormateada}</p>`;\n                                            mostrarTextoAnimado(messagesDiv, mensaje);\n                                            messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                            // Guardar la respuesta del tutor (output)\n                                            $.ajax({\n                                                url: `${API_BD_TUTOR_BASE}messages/save`,\n                                                method: 'POST',\n                                                data: JSON.stringify({\n                                                    user_id: userid,\n                                                    message_type: 'feed_output',\n                                                    message_text: response.respuesta\n                                                }),\n                                                contentType: 'application/json'\n                                            });\n                                        } else {\n                                            messagesDiv.append('<p><strong>Tutor:</strong> Error: No se pudo generar la actividad de refuerzo.</p>');\n                                            messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                        }\n                                    })\n                                    .catch(function() {\n                                        removeTutorLoader();\n                                        messagesDiv.append('<p><strong>Tutor:</strong> Error al generar actividad de refuerzo.</p>');\n                                        messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                    });\n                            }\n                            // No action is needed, just return null to satisfy arrow function return\n                            return null;\n                        }).catch(() => {\n                            removeTutorLoader();\n                            messagesDiv.append('<p><strong>Tutor:</strong> Error al procesar retroalimentaciones.</p>');\n                            messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                        });\n                    }\n                } else {\n                    // Retroalimentación para tareas\n                    llamarAPITutor(instruccionRetro, JSON.stringify(actividadData), 256)\n                        .then(function(response) {\n                            removeTutorLoader();\n                            if (response.respuesta) {\n                                var cleanedResponse = response.respuesta;\n                                var jsonMatch = cleanedResponse.match(/{[\\s\\S]*}/);\n                                var textoExplicativo = cleanedResponse;\n                                if (jsonMatch) {\n                                    textoExplicativo = cleanedResponse.substring(0, jsonMatch.index).trim();\n                                    cleanedResponse = jsonMatch[0];\n                                }\n                                var mensaje = `<p><strong>Tutor:</strong> Hola ${actividadData.name}, aquí tienes la retroalimentación para \"${actividadData.actividad}\":</p>`;\n                                // Solo agregar texto explicativo si existe y no está vacío\n                                if (textoExplicativo) {\n                                    mensaje += `<div style='color:#555;margin-bottom:8px;'>${textoExplicativo.replace(/\\n/g, '<br>')}</div>`;\n                                }\n                                // Agregar recomendaciones si existen\n                                try {\n                                    var recomendaciones = JSON.parse(cleanedResponse);\n                                    if (recomendaciones.recomendaciones && recomendaciones.recomendaciones.length > 0) {\n                                        mensaje += '<ul style=\"margin-left:18px;\">';\n                                        recomendaciones.recomendaciones.forEach(rec => {\n                                            mensaje += `<li><strong>${rec.actividad}</strong> (Nota: ${rec.grade}):<br><span style='color:#007bff;'>${rec.recomendacion}</span></li>`;\n                                        });\n                                        mensaje += '</ul>';\n                                    } else if (recomendaciones.recomendacion) {\n                                        mensaje += `<div style='color:#007bff;'>${recomendaciones.recomendacion}</div>`;\n                                    }\n                                } catch (e) {\n                                    // Si no es JSON, solo mostrar el texto explicativo una vez\n                                    if (!textoExplicativo) {\n                                        mensaje += `<div>${response.respuesta.replace(/\\n/g, '<br>')}</div>`;\n                                    }\n                                }\n                                mostrarTextoAnimado(messagesDiv, mensaje);\n                                messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                // Guardar la respuesta del tutor (output)\n                                $.ajax({\n                                    url: `${API_BD_TUTOR_BASE}messages/save`,\n                                    method: 'POST',\n                                    data: JSON.stringify({\n                                        user_id: userid,\n                                        message_type: 'feed_output',\n                                        message_text: response.respuesta\n                                    }),\n                                    contentType: 'application/json'\n                                });\n                            } else {\n                                messagesDiv.append('<p><strong>Tutor:</strong> Error: Respuesta inválida de la API.</p>');\n                                messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                            }\n                        })\n                        .catch(function() {\n                            removeTutorLoader();\n                            messagesDiv.append('<p><strong>Tutor:</strong> Error al obtener retroalimentación.</p>');\n                            messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                        });\n                }\n            }\n\n            // Evento click para el botón, con control de cooldown\n            if (requestBtn.length) {\n                requestBtn.on('click', function() {\n                    if (cooldown) {\n                        messagesDiv.append('<p><strong>Espera unos segundos antes de volver a solicitar retroalimentación.</strong></p>');\n                        messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                        return;\n                    }\n                    cooldown = true;\n                    requestBtn.prop('disabled', true);\n                    obtenerRetroalimentacion();\n                    setTimeout(function() {\n                        cooldown = false;\n                        requestBtn.prop('disabled', false);\n                    }, cooldownTime);\n                });\n            }\n\n        }\n    };\n});"],"names":["define","$","API_Moodle","API_BD_TUTOR_BASE","llamarAPITutor","instruccion","entrada","maxTokens","Promise","resolve","reject","ajax","url","method","contentType","data","JSON","stringify","max_nuevos_tokens","success","response","respuesta","Error","error","xhr","status","init","userid","courseid","cmid","modname","messagesDiv","requestBtn","cooldown","showTutorLoader","loader","html","append","scrollTop","scrollHeight","removeTutorLoader","find","remove","mostrarTextoAnimado","element","velocidad","arguments","length","undefined","bubble","span","safeHtml","replace","match","p1","lang","code","text","i","typeChar","slice","setTimeout","removeClass","each","formattedCode","this","obtenerRetroalimentacion","params","wstoken","wsfunction","moodlewsrestformat","queryString","param","fullUrl","dataType","actividadData","usergrades","forEach","user","gradeitems","item","grade","graderaw","name","userfullname","actividad","itemname","feedback","feedbackformat","tempDiv","paramsContext","queryStringContext","fullUrlContext","contextData","cm","instance","id","quizid","attempts","attemptId","remainingAttempts","paramsAttempt","attemptid","page","queryStringAttempt","fullUrlAttempt","attemptData","warnings","message","questions","preguntasIncorrectas","question","preguntaMatch","pregunta","numeroPregunta","questionnumber","estado","estadoInterno","state","respuestaSeleccionadaMatch","respuestaSeleccionada","respuestaCorrectaMatch","respuestaCorrecta","opciones","opcionesMatches","matchAll","push","numero","enviarDatosParaRetroalimentacion","obtenerDatosCuestionario","paramsAssignment","courseids","queryStringAssignment","fullUrlAssignment","assignmentData","assignment","courses","course","assignments","assign","title","description","intro","introformat","paramsSubmission","assignmentids","queryStringSubmission","fullUrlSubmission","submissionData","entregaEstudiante","submissions","sub","submissionStatus","obtenerDatosTarea","user_id","message_type","message_text","map","index","join","then","mensaje","catch","promesas","all","actividadFormateada","cleanedResponse","jsonMatch","textoExplicativo","substring","trim","recomendaciones","parse","rec","recomendacion","e","on","prop"],"mappings":"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"}