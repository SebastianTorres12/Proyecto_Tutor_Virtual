{"version":3,"file":"feedback.min.js","sources":["../src/feedback.js"],"sourcesContent":["/* eslint-disable camelcase */\n/* eslint-disable jsdoc/require-jsdoc */\n/* eslint-disable jsdoc/require-param */\n/* eslint-disable max-len */\ndefine(['jquery'], function($) {\n    // Definición de variables generales para las APIs\n    const API_tutor = 'http://localhost:8000/generar'; // API para generar retroalimentación del tutor\n    const API_Moodle = 'http://localhost/webservice/rest/server.php'; // API de Moodle para servicios web\n    const API_BD_TUTOR_BASE = 'http://localhost:8080/api/';\n\n    return {\n        init: function(userid, courseid, cmid, modname) {\n            var messagesDiv = $('#feedback-messages');\n            var requestBtn = $('#feedback-request-btn');\n            var cooldown = false;\n            var cooldownTime = 10000; // 10 segundos (puedes cambiar a 5000 para 5 segundos)\n\n            // Loader visual para el tutor\n            function showTutorLoader() {\n                var loader = $('<div class=\"tutor-bubble tutor-loader\"></div>').html('<span><em>El tutor está escribiendo...</em></span>');\n                messagesDiv.append(loader);\n                messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n            }\n            function removeTutorLoader() {\n                messagesDiv.find('.tutor-loader').remove();\n            }\n\n            // --- NUEVA FUNCIÓN PARA ANIMAR EL TEXTO EN BURBUJA Y RESPETAR HTML (ESTILO CHAT) ---\n            function mostrarTextoAnimado(element, html, velocidad = 20) {\n                removeTutorLoader();\n                var bubble = $('<div class=\"tutor-bubble typing-tutor\"></div>');\n                bubble.append('<span></span>');\n                element.append(bubble);\n                var span = bubble.find('span');\n                // Permitir etiquetas seguras: <br>, <b>, <i>, <pre>, <code>\n                var safeHtml = html\n                    .replace(/```([a-zA-Z]*)\\n([\\s\\S]*?)```/g, function(match, lang, code) {\n                        return '<pre><code>' + $('<div>').text(code).html() + '</code></pre>';\n                    })\n                    .replace(/\\n/g, '<br>')\n                    .replace(/<(?!br\\s*\\/?>|b>|\\/b>|i>|\\/i>|pre>|\\/pre>|code>|\\/code>)[^>]+>/gi, '');\n                var i = 0;\n                function typeChar() {\n                    if (i <= safeHtml.length) {\n                        span.html(safeHtml.slice(0, i));\n                        element.scrollTop(element[0].scrollHeight);\n                        i++;\n                        setTimeout(typeChar, velocidad);\n                    } else {\n                        span.html(safeHtml);\n                        bubble.removeClass('typing-tutor');\n                        element.scrollTop(element[0].scrollHeight);\n                    }\n                }\n                typeChar();\n            }\n            // --- FIN NUEVA FUNCIÓN ---\n\n            /**\n             * Obtiene la calificación, contenido y respuestas del usuario para la actividad específica.\n             */\n            function obtenerRetroalimentacion() {\n                var params = {\n                    wstoken: '10b97b49ec5c5119e48c566de5228f8f',\n                    wsfunction: 'gradereport_user_get_grade_items',\n                    moodlewsrestformat: 'json',\n                    courseid: courseid,\n                    userid: userid\n                };\n\n                var queryString = $.param(params);\n                var fullUrl = `${API_Moodle}?${queryString}`;\n\n                showTutorLoader();\n                $.ajax({\n                    url: fullUrl,\n                    method: 'GET',\n                    dataType: 'json',\n                    success: function(data) {\n                        removeTutorLoader();\n\n                        var actividadData = null;\n                        if (data.usergrades) {\n                            data.usergrades.forEach(user => {\n                                user.gradeitems.forEach(item => {\n                                    if (item.cmid == cmid) {\n                                        var grade = item.graderaw !== null ? item.graderaw : 0;\n                                        actividadData = {\n                                            userid: user.userid,\n                                            name: user.userfullname,\n                                            grade: grade,\n                                            actividad: item.itemname,\n                                            feedback: item.feedback || 'Sin retroalimentación del profesor.',\n                                            feedbackformat: item.feedbackformat || 0\n                                        };\n                                    }\n                                });\n                            });\n                        }\n\n                        if (!actividadData) {\n                            messagesDiv.append('<p><strong>Tutor:</strong> No se encontró una calificación para esta actividad o aún no ha sido calificada.</p>');\n                            messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                            return;\n                        }\n\n                        if (actividadData.feedbackformat === 1) {\n                            var tempDiv = $('<div>').html(actividadData.feedback);\n                            actividadData.feedback = tempDiv.text();\n                        }\n\n                        var paramsContext = {\n                            wstoken: '10b97b49ec5c5119e48c566de5228f8f',\n                            wsfunction: 'core_course_get_course_module',\n                            moodlewsrestformat: 'json',\n                            cmid: cmid\n                        };\n\n                        var queryStringContext = $.param(paramsContext);\n                        var fullUrlContext = `${API_Moodle}?${queryStringContext}`;\n\n                        $.ajax({\n                            url: fullUrlContext,\n                            method: 'GET',\n                            dataType: 'json',\n                            success: function(contextData) {\n                                removeTutorLoader();\n\n                                if (!contextData.cm || !contextData.cm.instance) {\n                                    messagesDiv.append('<p><strong>Tutor:</strong> No se pudo obtener el ID de la actividad.</p>');\n                                    messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                    return;\n                                }\n\n                                actividadData.id = contextData.cm.instance;\n\n                                if (modname === 'quiz') {\n                                    obtenerDatosCuestionario(actividadData);\n                                } else if (modname === 'assign') {\n                                    obtenerDatosTarea(actividadData);\n                                } else {\n                                    messagesDiv.append('<p><strong>Tutor:</strong> Este tipo de actividad no es compatible para análisis detallado.</p>');\n                                    messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                }\n                            },\n                            error: function() {\n                                removeTutorLoader();\n                                messagesDiv.append('<p><strong>Tutor:</strong> Error al obtener contextid.</p>');\n                                messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                            }\n                        });\n                    },\n                    error: function() {\n                        removeTutorLoader();\n                        messagesDiv.append('<p><strong>Tutor:</strong> Error al obtener calificaciones.</p>');\n                        messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                    }\n                });\n            }\n\n            /**\n             * Obtiene las preguntas y respuestas del estudiante para un cuestionario.\n             */\n            function obtenerDatosCuestionario(actividadData) {\n                var params = {\n                    wstoken: '10b97b49ec5c5119e48c566de5228f8f',\n                    wsfunction: 'mod_quiz_get_user_attempts',\n                    moodlewsrestformat: 'json',\n                    quizid: actividadData.id,\n                    userid: userid,\n                    status: 'finished'\n                };\n\n                var queryString = $.param(params);\n                var fullUrl = `${API_Moodle}?${queryString}`;\n\n                showTutorLoader();\n                $.ajax({\n                    url: fullUrl,\n                    method: 'GET',\n                    dataType: 'json',\n                    success: function(data) {\n                        removeTutorLoader();\n\n                        if (!data.attempts || data.attempts.length === 0) {\n                            messagesDiv.append('<p><strong>Tutor:</strong> No se encontraron intentos para este cuestionario.</p>');\n                            messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                            return;\n                        }\n\n                        var ultimoIntento = data.attempts[data.attempts.length - 1];\n                        var attemptId = ultimoIntento.id;\n\n                        // Establecer número máximo de intentos fijo\n                        var maxAttempts = 3;\n                        var attemptsMade = data.attempts.length;\n                        var remainingAttempts = maxAttempts - attemptsMade;\n\n                        if (remainingAttempts < 0) {\n                            remainingAttempts = 0; // Por si hay un error en los datos\n                        }\n\n                        actividadData.remainingAttempts = remainingAttempts;\n\n                        // Obtener detalles del intento\n                        var paramsAttempt = {\n                            wstoken: '10b97b49ec5c5119e48c566de5228f8f',\n                            wsfunction: 'mod_quiz_get_attempt_review',\n                            moodlewsrestformat: 'json',\n                            attemptid: attemptId,\n                            page: -1\n                        };\n\n                        var queryStringAttempt = $.param(paramsAttempt);\n                        var fullUrlAttempt = `${API_Moodle}?${queryStringAttempt}`;\n\n                        $.ajax({\n                            url: fullUrlAttempt,\n                            method: 'GET',\n                            dataType: 'json',\n                            success: function(attemptData) {\n                                removeTutorLoader();\n\n                                if (attemptData.warnings && attemptData.warnings.length > 0) {\n                                    messagesDiv.append('<p><strong>Tutor:</strong> Advertencias: ' + attemptData.warnings[0].message + '</p>');\n                                    messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                    return;\n                                }\n\n                                if (!attemptData.questions || attemptData.questions.length === 0) {\n                                    messagesDiv.append('<p><strong>Tutor:</strong> No se encontraron preguntas en el intento.</p>');\n                                    messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                    return;\n                                }\n\n                                var preguntasIncorrectas = [];\n                                attemptData.questions.forEach(question => {\n                                    var preguntaMatch = question.html.match(/<div class=\"qtext\">(.*?)<\\/div>/is);\n                                    var pregunta = preguntaMatch ? preguntaMatch[1] : 'No se pudo extraer la pregunta';\n\n                                    var numeroPregunta = question.questionnumber || 'Desconocido';\n\n                                    var estado = question.status || 'Desconocido';\n                                    var estadoInterno = question.state || 'unknown';\n\n                                    var respuestaSeleccionadaMatch = question.html.match(/<input[^>]+checked=\"checked\"[^>]*>.*?<div class=\"flex-fill ms-1\">([^<]+)</is);\n                                    var respuestaSeleccionada = respuestaSeleccionadaMatch ? respuestaSeleccionadaMatch[1] : 'No se pudo extraer la respuesta seleccionada';\n\n                                    var respuestaCorrectaMatch = question.html.match(/<div class=\"rightanswer\">La respuesta correcta es: ([^<]+)</is);\n                                    var respuestaCorrecta = respuestaCorrectaMatch ? respuestaCorrectaMatch[1] : 'No se pudo extraer la respuesta correcta';\n\n                                    var opciones = [];\n                                    var opcionesMatches = question.html.matchAll(/<div class=\"flex-fill ms-1\">([^<]+)<\\/div>/gis);\n                                    for (let match of opcionesMatches) {\n                                        opciones.push(match[1]);\n                                    }\n\n                                    if (estado === 'Incorrecta' || estadoInterno === 'gradedwrong') {\n                                        preguntasIncorrectas.push({\n                                            numero: numeroPregunta,\n                                            pregunta: pregunta,\n                                            respuestaSeleccionada: respuestaSeleccionada,\n                                            respuestaCorrecta: respuestaCorrecta,\n                                            opciones: opciones,\n                                            estado: estado\n                                        });\n                                    }\n                                });\n\n                                actividadData.preguntasIncorrectas = preguntasIncorrectas;\n\n                                if (preguntasIncorrectas.length === 0) {\n                                    messagesDiv.append('<p><strong>Tutor:</strong> ¡Felicidades! Respondiste todas las preguntas correctamente.</p>');\n                                    messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                } else {\n                                    enviarDatosParaRetroalimentacion(actividadData);\n                                }\n                            },\n                            error: function() {\n                                removeTutorLoader();\n                                messagesDiv.append('<p><strong>Tutor:</strong> Error al obtener datos del intento.</p>');\n                                messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                            }\n                        });\n                    },\n                    error: function() {\n                        removeTutorLoader();\n                        messagesDiv.append('<p><strong>Tutor:</strong> Error al obtener intentos.</p>');\n                        messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                    }\n                });\n            }\n\n            /**\n             * Obtiene el contenido enviado por el estudiante para una tarea.\n             */\n            function obtenerDatosTarea(actividadData) {\n                var paramsAssignment = {\n                    wstoken: '10b97b49ec5c5119e48c566de5228f8f',\n                    wsfunction: 'mod_assign_get_assignments',\n                    moodlewsrestformat: 'json',\n                    courseids: [courseid]\n                };\n\n                var queryStringAssignment = $.param(paramsAssignment);\n                var fullUrlAssignment = `${API_Moodle}?${queryStringAssignment}`;\n\n                showTutorLoader();\n                $.ajax({\n                    url: fullUrlAssignment,\n                    method: 'GET',\n                    dataType: 'json',\n                    success: function(assignmentData) {\n                        removeTutorLoader();\n\n                        var assignment = null;\n                        if (assignmentData.courses && assignmentData.courses.length > 0) {\n                            assignmentData.courses.forEach(course => {\n                                course.assignments.forEach(assign => {\n                                    if (assign.cmid == cmid) {\n                                        assignment = assign;\n                                    }\n                                });\n                            });\n                        }\n\n                        if (!assignment) {\n                            messagesDiv.append('<p><strong>Tutor:</strong> No se encontró información sobre la tarea.</p>');\n                            messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                            return;\n                        }\n\n                        actividadData.title = assignment.name;\n                        actividadData.description = assignment.intro || 'Sin descripción disponible.';\n                        actividadData.introformat = assignment.introformat || 0;\n\n                        if (actividadData.introformat === 1) {\n                            var tempDiv = $('<div>').html(actividadData.description);\n                            actividadData.description = tempDiv.text();\n                        }\n\n                        var paramsSubmission = {\n                            wstoken: '10b97b49ec5c5119e48c566de5228f8f',\n                            wsfunction: 'mod_assign_get_submissions',\n                            moodlewsrestformat: 'json',\n                            assignmentids: [actividadData.id]\n                        };\n\n                        var queryStringSubmission = $.param(paramsSubmission);\n                        var fullUrlSubmission = `${API_Moodle}?${queryStringSubmission}`;\n\n                        $.ajax({\n                            url: fullUrlSubmission,\n                            method: 'GET',\n                            dataType: 'json',\n                            success: function(submissionData) {\n                                removeTutorLoader();\n\n                                var entregaEstudiante = null;\n                                if (submissionData.assignments && submissionData.assignments.length > 0) {\n                                    var submissions = submissionData.assignments[0].submissions;\n                                    entregaEstudiante = submissions.find(sub => sub.userid == userid);\n                                }\n\n                                if (!entregaEstudiante) {\n                                    actividadData.status = 'pendiente';\n                                    actividadData.submissionStatus = 'No entregada';\n                                    enviarDatosParaRetroalimentacion(actividadData);\n                                    return;\n                                }\n\n                                actividadData.status = entregaEstudiante.status || 'entregada';\n                                actividadData.submissionStatus = entregaEstudiante.status === 'submitted' ? 'Entregada' : 'Borrador';\n\n                                if (actividadData.status === 'submitted') {\n                                    if (actividadData.grade > 0) {\n                                        actividadData.status = 'calificada';\n                                    } else {\n                                        actividadData.status = 'entregada_no_calificada';\n                                    }\n                                }\n\n                                enviarDatosParaRetroalimentacion(actividadData);\n                            },\n                            error: function() {\n                                removeTutorLoader();\n                                messagesDiv.append('<p><strong>Tutor:</strong> Error al obtener entregas.</p>');\n                                messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                            }\n                        });\n                    },\n                    error: function() {\n                        removeTutorLoader();\n                        messagesDiv.append('<p><strong>Tutor:</strong> Error al obtener datos de la tarea.</p>');\n                        messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                    }\n                });\n            }\n\n            /**\n             * Envía los datos a la API para obtener retroalimentación detallada.\n             */\n            function enviarDatosParaRetroalimentacion(actividadData) {\n                showTutorLoader();\n                // Guardar la entrada del usuario (input)\n                $.ajax({\n                    url: `${API_BD_TUTOR_BASE}messages/save`,\n                    method: 'POST',\n                    data: JSON.stringify({\n                        user_id: userid,\n                        message_type: 'feed_input',\n                        message_text: JSON.stringify(actividadData)\n                    }),\n                    contentType: 'application/json'\n                });\n                var instruccionRetro = `\n                    Actúa como un tutor virtual especializado en la enseñanza de Análisis y Diseño de Software. Tu tarea es proporcionar retroalimentación educativa a un estudiante basada en el estado de una tarea. Recibirás los datos en el formato: \n                    {\n                        \"userid\": number, \n                        \"name\": string, \n                        \"grade\": number, \n                        \"actividad\": string, \n                        \"title\": string, \n                        \"description\": string, \n                        \"status\": string (\"pendiente\", \"entregada_no_calificada\", \"calificada\"), \n                        \"submissionStatus\": string, \n                        \"feedback\": string\n                    }\n                    \n                    - Si el estado es \"pendiente\", analiza el título y la descripción de la tarea y proporciona recomendaciones específicas para que el estudiante la complete exitosamente.\n                    - Si el estado es \"entregada_no_calificada\", informa al estudiante que su tarea está en proceso de evaluación y sugiere cómo puede prepararse para futuras tareas similares.\n                    - Si el estado es \"calificada\", analiza la calificación y la retroalimentación del profesor para proporcionar retroalimentación adicional. Explica qué hizo bien el estudiante, qué puede mejorar, y sugiere pasos específicos para futuras tareas.\n                    \n                    Devuelve la retroalimentación en formato texto, en español, con un tono profesional y motivador.\n                `;\n\n                if (actividadData.preguntasIncorrectas && actividadData.preguntasIncorrectas.length > 0) {\n                    if (actividadData.remainingAttempts > 0) {\n                        // Retroalimentación de apoyo para intentos restantes\n                        var promptApoyo = `\n                            Eres un tutor virtual especializado en Análisis y Diseño de Software. Un estudiante ha respondido incorrectamente algunas preguntas en un cuestionario, pero aún tiene ${actividadData.remainingAttempts} intento(s) restante(s). Proporciona retroalimentación de apoyo que identifique los temas principales de las preguntas incorrectas y ofrezca consejos generales para mejorar, sin revelar las respuestas correctas ni detalles específicos de las preguntas.\n\n                            Preguntas incorrectas:\n                            ${actividadData.preguntasIncorrectas.map((pregunta, index) => `\n                            Pregunta ${index + 1} (Número ${pregunta.numero}): ${pregunta.pregunta}\n                            `).join('\\n')}\n\n                            Identifica los temas principales (por ejemplo, modelado UML, casos de uso, diagramas de clases) y sugiere cómo mejorar en ellos (máximo 150 palabras). Comienza con \"¡No te preocupes, estás progresando!\" y usa un tono motivador. No menciones respuestas correctas ni hagas referencia a libros o materiales externos.\n                        `;\n\n                        $.ajax({\n                            url: API_tutor, // Usar variable para endpoint de generación\n                            method: 'POST',\n                            contentType: 'application/json',\n                            data: JSON.stringify({\n                                instruccion: \"Proporciona retroalimentación de apoyo basada en los temas de las preguntas incorrectas.\",\n                                entrada: promptApoyo,\n                                max_nuevos_tokens: 256\n                            }),\n                            success: function(response) {\n                                removeTutorLoader();\n\n                                if (response.respuesta) {\n                                    var retroalimentacionFormateada = response.respuesta.replace(/\\n/g, '<br>');\n                                    var mensaje = `<p><strong>Tutor:</strong><br>${retroalimentacionFormateada}<br>Tienes ${actividadData.remainingAttempts} intento(s) restante(s). ¡Sigue practicando!</p>`;\n                                    mostrarTextoAnimado(messagesDiv, mensaje);\n                                    messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                    // Guardar la respuesta del tutor (output)\n                                    $.ajax({\n                                        url: `${API_BD_TUTOR_BASE}messages/save`,\n                                        method: 'POST',\n                                        data: JSON.stringify({\n                                            user_id: userid,\n                                            message_type: 'feed_output',\n                                            message_text: response.respuesta\n                                        }),\n                                        contentType: 'application/json'\n                                    });\n                                } else {\n                                    messagesDiv.append('<p><strong>Tutor:</strong> Error: No se pudo generar la retroalimentación de apoyo.</p>');\n                                    messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                }\n                            },\n                            error: function() {\n                                removeTutorLoader();\n                                messagesDiv.append('<p><strong>Tutor:</strong> Error al obtener retroalimentación de apoyo.</p>');\n                                messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                            }\n                        });\n                    } else {\n                        // Retroalimentación detallada y actividad de refuerzo cuando no hay intentos\n                        var promesas = actividadData.preguntasIncorrectas.map(pregunta => {\n                            var prompt = `\n                                Eres un tutor virtual especializado en Análisis y Diseño de Software. Explica por qué la respuesta correcta es adecuada para la siguiente pregunta de un cuestionario, considerando el contexto y las opciones disponibles.\n\n                                **Pregunta**: ${pregunta.pregunta}\n                                **Respuesta seleccionada**: ${pregunta.respuestaSeleccionada} (incorrecta)\n                                **Respuesta correcta**: ${pregunta.respuestaCorrecta}\n                                **Opciones**: ${pregunta.opciones.join(', ')}\n\n                                Explica por qué \"${pregunta.respuestaCorrecta}\" es correcta y por qué \"${pregunta.respuestaSeleccionada}\" no lo es. Usa un lenguaje claro, educativo y motivador (máximo 100 palabras).\n                            `;\n\n                            return $.ajax({\n                                url: API_tutor, // Usar variable para endpoint de generación\n                                method: 'POST',\n                                contentType: 'application/json',\n                                data: JSON.stringify({\n                                    instruccion: \"Proporciona una explicación clara y detallada.\",\n                                    entrada: prompt,\n                                    max_nuevos_tokens: 256\n                                }),\n                                success: function(response) {\n                                    removeTutorLoader();\n\n                                    if (response.respuesta) {\n                                        var mensaje = `<p><strong>Tutor:</strong> Pregunta ${pregunta.numero}: \"${pregunta.pregunta}\":<br>` +\n                                            `<strong>Respondiste:</strong> \"${pregunta.respuestaSeleccionada}\" (Incorrecta).<br>` +\n                                            `<strong>Correcta:</strong> \"${pregunta.respuestaCorrecta}\".<br>` +\n                                            `<strong>Explicación:</strong> ${response.respuesta}</p>`;\n                                        mostrarTextoAnimado(messagesDiv, mensaje);\n                                        messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                        // Guardar la respuesta del tutor (output)\n                                        $.ajax({\n                                            url: `${API_BD_TUTOR_BASE}messages/save`,\n                                            method: 'POST',\n                                            data: JSON.stringify({\n                                                user_id: userid,\n                                                message_type: 'feed_output',\n                                                message_text: response.respuesta\n                                            }),\n                                            contentType: 'application/json'\n                                        });\n                                    }\n                                },\n                                error: function() {\n                                    removeTutorLoader();\n                                    messagesDiv.append('<p><strong>Tutor:</strong> Error al obtener retroalimentación para la Pregunta.</p>');\n                                    messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                }\n                            });\n                        });\n\n                        Promise.all(promesas).then(() => {\n                            if (actividadData.grade < 7) {\n                                var promptRefuerzo = `\n                                    Eres un tutor virtual especializado en Análisis y Diseño de Software. Un estudiante obtuvo una calificación de ${actividadData.grade} en un cuestionario (escala 0-10). Propón una actividad de refuerzo para mejorar en los temas de los preguntas incorrectas:\n\n                                    ${actividadData.preguntasIncorrectas.map((pregunta, index) => `\n                                    Pregunta ${index + 1} (Número ${pregunta.numero}): ${pregunta.pregunta}\n                                    Respuesta seleccionada: ${pregunta.respuestaSeleccionada} (incorrecta)\n                                    Respuesta correcta: ${pregunta.respuestaCorrecta}\n                                    `).join('\\n')}\n\n                                    Identifica los temas de los errores y propone una actividad práctica y breve (máximo 200 palabras) que aborde todos los temas. Comienza con \"¡Vamos a reforzar tus conocimientos!\" and usa un tono motivador. No menciones libros ni materiales externos.\n                                `;\n\n                                return $.ajax({\n                                    url: API_tutor, // Usar variable para endpoint de generación\n                                    method: 'POST',\n                                    contentType: 'application/json',\n                                    data: JSON.stringify({\n                                        instruccion: \"Proporciona una actividad de refuerzo basada en los errores del estudiante.\",\n                                        entrada: promptRefuerzo,\n                                        max_nuevos_tokens: 256\n                                    }),\n                                    success: function(response) {\n                                        removeTutorLoader();\n\n                                        if (response.respuesta) {\n                                            var actividadFormateada = response.respuesta.replace(/\\n/g, '<br>');\n                                            var mensaje = `<p><strong>Tutor:</strong><br><strong>Actividad de refuerzo:</strong><br>${actividadFormateada}</p>`;\n                                            mostrarTextoAnimado(messagesDiv, mensaje);\n                                            messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                            // Guardar la respuesta del tutor (output)\n                                            $.ajax({\n                                                url: `${API_BD_TUTOR_BASE}messages/save`,\n                                                method: 'POST',\n                                                data: JSON.stringify({\n                                                    user_id: userid,\n                                                    message_type: 'feed_output',\n                                                    message_text: response.respuesta\n                                                }),\n                                                contentType: 'application/json'\n                                            });\n                                        } else {\n                                            messagesDiv.append('<p><strong>Tutor:</strong> Error: No se pudo generar la actividad de refuerzo.</p>');\n                                            messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                        }\n                                    },\n                                    error: function() {\n                                        removeTutorLoader();\n                                        messagesDiv.append('<p><strong>Tutor:</strong> Error al generar actividad de refuerzo.</p>');\n                                        messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                    }\n                                });\n                            }\n                            // No action is needed, just return null to satisfy arrow function return\n                            return null;\n                        }).catch(() => {\n                            removeTutorLoader();\n                            messagesDiv.append('<p><strong>Tutor:</strong> Error al procesar retroalimentaciones.</p>');\n                            messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                        });\n                    }\n                } else {\n                    // Retroalimentación para tareas\n                    $.ajax({\n                        url: API_tutor, // Usar variable para endpoint de generación\n                        method: 'POST',\n                        contentType: 'application/json',\n                        data: JSON.stringify({\n                            instruccion: instruccionRetro,\n                            entrada: JSON.stringify(actividadData),\n                            max_nuevos_tokens: 256\n                        }),\n                        success: function(response) {\n                            removeTutorLoader();\n\n                            if (response.respuesta) {\n                                var retroalimentacionFormateada = response.respuesta.replace(/\\n/g, '<br>');\n                                var mensaje = `<p><strong>Tutor:</strong> Hola ${actividadData.name}, aquí tienes la retroalimentación para \"${actividadData.actividad}\":<br>${retroalimentacionFormateada}</p>`;\n                                mostrarTextoAnimado(messagesDiv, mensaje);\n                                messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                // Guardar la respuesta del tutor (output)\n                                $.ajax({\n                                    url: `${API_BD_TUTOR_BASE}messages/save`,\n                                    method: 'POST',\n                                    data: JSON.stringify({\n                                        user_id: userid,\n                                        message_type: 'feed_output',\n                                        message_text: response.respuesta\n                                    }),\n                                    contentType: 'application/json'\n                                });\n                            } else {\n                                messagesDiv.append('<p><strong>Tutor:</strong> Error: Respuesta inválida de la API.</p>');\n                                messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                            }\n                        },\n                        error: function() {\n                            removeTutorLoader();\n                            messagesDiv.append('<p><strong>Tutor:</strong> Error al obtener retroalimentación.</p>');\n                            messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                        }\n                    });\n                }\n            }\n\n            // Evento click para el botón, con control de cooldown\n            if (requestBtn.length) {\n                requestBtn.on('click', function() {\n                    if (cooldown) {\n                        messagesDiv.append('<p><strong>Espera unos segundos antes de volver a solicitar retroalimentación.</strong></p>');\n                        messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                        return;\n                    }\n                    cooldown = true;\n                    requestBtn.prop('disabled', true);\n                    obtenerRetroalimentacion();\n                    setTimeout(function() {\n                        cooldown = false;\n                        requestBtn.prop('disabled', false);\n                    }, cooldownTime);\n                });\n            }\n\n        }\n    };\n});"],"names":["define","$","API_tutor","API_Moodle","API_BD_TUTOR_BASE","init","userid","courseid","cmid","modname","messagesDiv","requestBtn","cooldown","showTutorLoader","loader","html","append","scrollTop","scrollHeight","removeTutorLoader","find","remove","mostrarTextoAnimado","element","velocidad","arguments","length","undefined","bubble","span","safeHtml","replace","match","lang","code","text","i","typeChar","slice","setTimeout","removeClass","obtenerRetroalimentacion","params","wstoken","wsfunction","moodlewsrestformat","queryString","param","fullUrl","ajax","url","method","dataType","success","data","actividadData","usergrades","forEach","user","gradeitems","item","grade","graderaw","name","userfullname","actividad","itemname","feedback","feedbackformat","tempDiv","paramsContext","queryStringContext","fullUrlContext","contextData","cm","instance","id","quizid","status","attempts","attemptId","remainingAttempts","paramsAttempt","attemptid","page","queryStringAttempt","fullUrlAttempt","attemptData","warnings","message","questions","preguntasIncorrectas","question","preguntaMatch","pregunta","numeroPregunta","questionnumber","estado","estadoInterno","state","respuestaSeleccionadaMatch","respuestaSeleccionada","respuestaCorrectaMatch","respuestaCorrecta","opciones","opcionesMatches","matchAll","push","numero","enviarDatosParaRetroalimentacion","error","obtenerDatosCuestionario","paramsAssignment","courseids","queryStringAssignment","fullUrlAssignment","assignmentData","assignment","courses","course","assignments","assign","title","description","intro","introformat","paramsSubmission","assignmentids","queryStringSubmission","fullUrlSubmission","submissionData","entregaEstudiante","submissions","sub","submissionStatus","obtenerDatosTarea","JSON","stringify","user_id","message_type","message_text","contentType","promptApoyo","map","index","join","instruccion","entrada","max_nuevos_tokens","response","respuesta","mensaje","promesas","prompt","Promise","all","then","promptRefuerzo","actividadFormateada","catch","retroalimentacionFormateada","on","prop"],"mappings":"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"}