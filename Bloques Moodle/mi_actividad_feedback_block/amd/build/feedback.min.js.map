{"version":3,"file":"feedback.min.js","sources":["../src/feedback.js"],"sourcesContent":["/* eslint-disable jsdoc/require-jsdoc */\n/* eslint-disable no-trailing-spaces */\n/* eslint-disable jsdoc/require-param */\n/* eslint-disable max-len */\n/* eslint-disable no-console */\ndefine(['jquery'], function ($) {\n    // Definición de variables generales para las APIs\n    const API_tutor = 'http://localhost:8000/generar'; // API para generar retroalimentación del tutor\n    const API_Moodle = 'http://localhost/webservice/rest/server.php'; // API de Moodle para servicios web\n\n    return {\n        init: function (userid, courseid, cmid, modname) {\n            var messagesDiv = $('#feedback-messages');\n            var requestBtn = $('#feedback-request-btn');\n            var cooldown = false;\n            var cooldownTime = 10000; // 10 segundos (puedes cambiar a 5000 para 5 segundos)\n\n            // --- NUEVA FUNCIÓN PARA ANIMAR EL TEXTO ---\n            function mostrarTextoAnimado(element, html, velocidad = 20) {\n                element.append('<div class=\"typing-tutor\"></div>');\n                var target = element.find('.typing-tutor').last();\n                var i = 0;\n                // Opcional: dividir por palabras en vez de letras\n                // var partes = html.split(' ');\n                var partes = html.split('');\n                function escribir() {\n                    if (i < partes.length) {\n                        target.append(partes[i]);\n                        i++;\n                        setTimeout(escribir, velocidad);\n                    } else {\n                        target.removeClass('typing-tutor');\n                    }\n                }\n                escribir();\n            }\n            // --- FIN NUEVA FUNCIÓN ---\n\n            /**\n             * Obtiene la calificación, contenido y respuestas del usuario para la actividad específica.\n             */\n            function obtenerRetroalimentacion() {\n                var params = {\n                    wstoken: '10b97b49ec5c5119e48c566de5228f8f',\n                    wsfunction: 'gradereport_user_get_grade_items',\n                    moodlewsrestformat: 'json',\n                    courseid: courseid,\n                    userid: userid\n                };\n\n                var queryString = $.param(params);\n                var fullUrl = `${API_Moodle}?${queryString}`;\n\n                console.log('URL generada para gradereport_user_get_grade_items:', fullUrl);\n\n                messagesDiv.append('<p><strong>Debug:</strong> Obteniendo calificación de la actividad...</p>');\n                messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n\n                $.ajax({\n                    url: fullUrl,\n                    method: 'GET',\n                    dataType: 'json',\n                    success: function (data) {\n                        console.log('Respuesta de gradereport_user_get_grade_items:', data);\n\n                        var actividadData = null;\n                        if (data.usergrades) {\n                            data.usergrades.forEach(user => {\n                                user.gradeitems.forEach(item => {\n                                    if (item.cmid == cmid) {\n                                        var grade = item.graderaw !== null ? item.graderaw : 0;\n                                        actividadData = {\n                                            userid: user.userid,\n                                            name: user.userfullname,\n                                            grade: grade,\n                                            actividad: item.itemname,\n                                            feedback: item.feedback || 'Sin retroalimentación del profesor.',\n                                            feedbackformat: item.feedbackformat || 0\n                                        };\n                                    }\n                                });\n                            });\n                        }\n\n                        if (!actividadData) {\n                            messagesDiv.append('<p><strong>Tutor:</strong> No se encontró una calificación para esta actividad o aún no ha sido calificada.</p>');\n                            messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                            return;\n                        }\n\n                        if (actividadData.feedbackformat === 1) {\n                            var tempDiv = $('<div>').html(actividadData.feedback);\n                            actividadData.feedback = tempDiv.text();\n                        }\n\n                        console.log('Datos de la actividad:', actividadData);\n\n                        var paramsContext = {\n                            wstoken: '10b97b49ec5c5119e48c566de5228f8f',\n                            wsfunction: 'core_course_get_course_module',\n                            moodlewsrestformat: 'json',\n                            cmid: cmid\n                        };\n\n                        var queryStringContext = $.param(paramsContext);\n                        var fullUrlContext = `${API_Moodle}?${queryStringContext}`;\n\n                        console.log('URL generada para core_course_get_course_module:', fullUrlContext);\n\n                        $.ajax({\n                            url: fullUrlContext,\n                            method: 'GET',\n                            dataType: 'json',\n                            success: function (contextData) {\n                                console.log('Respuesta de core_course_get_course_module:', contextData);\n\n                                if (!contextData.cm || !contextData.cm.instance) {\n                                    messagesDiv.append('<p><strong>Tutor:</strong> No se pudo obtener el ID de la actividad.</p>');\n                                    messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                    return;\n                                }\n\n                                actividadData.id = contextData.cm.instance;\n\n                                if (modname === 'quiz') {\n                                    obtenerDatosCuestionario(actividadData);\n                                } else if (modname === 'assign') {\n                                    obtenerDatosTarea(actividadData);\n                                } else {\n                                    messagesDiv.append('<p><strong>Tutor:</strong> Este tipo de actividad no es compatible para análisis detallado.</p>');\n                                    messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                }\n                            },\n                            error: function (xhr, status, error) {\n                                console.log('Error al obtener contextid:', { xhr, status, error });\n                                messagesDiv.append('<p><strong>Tutor:</strong> Error al obtener contextid: ' + error + '</p>');\n                                messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                            }\n                        });\n                    },\n                    error: function (xhr, status, error) {\n                        console.log('Error al obtener calificaciones:', { xhr, status, error });\n                        messagesDiv.append('<p><strong>Tutor:</strong> Error al obtener calificaciones: ' + error + ' (Código: ' + xhr.status + ')</p>');\n                        messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                    }\n                });\n            }\n\n            /**\n             * Obtiene las preguntas y respuestas del estudiante para un cuestionario.\n             */\n            function obtenerDatosCuestionario(actividadData) {\n                var params = {\n                    wstoken: '10b97b49ec5c5119e48c566de5228f8f',\n                    wsfunction: 'mod_quiz_get_user_attempts',\n                    moodlewsrestformat: 'json',\n                    quizid: actividadData.id,\n                    userid: userid,\n                    status: 'finished'\n                };\n\n                var queryString = $.param(params);\n                var fullUrl = `${API_Moodle}?${queryString}`;\n\n                console.log('URL generada para mod_quiz_get_user_attempts:', fullUrl);\n                console.log('Usuario ID utilizado:', userid);\n\n                $.ajax({\n                    url: fullUrl,\n                    method: 'GET',\n                    dataType: 'json',\n                    success: function (data) {\n                        console.log('Respuesta de mod_quiz_get_user_attempts:', data);\n\n                        if (!data.attempts || data.attempts.length === 0) {\n                            messagesDiv.append('<p><strong>Tutor:</strong> No se encontraron intentos para este cuestionario.</p>');\n                            messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                            return;\n                        }\n\n                        var ultimoIntento = data.attempts[data.attempts.length - 1];\n                        var attemptId = ultimoIntento.id;\n                        console.log('Attempt ID seleccionado:', attemptId);\n\n                        // Establecer número máximo de intentos fijo\n                        var maxAttempts = 3;\n                        var attemptsMade = data.attempts.length;\n                        var remainingAttempts = maxAttempts - attemptsMade;\n\n                        if (remainingAttempts < 0) {\n                            remainingAttempts = 0; // Por si hay un error en los datos\n                        }\n\n                        console.log('Intentos realizados:', attemptsMade, 'Intentos máximos:', maxAttempts, 'Intentos restantes:', remainingAttempts);\n                        actividadData.remainingAttempts = remainingAttempts;\n\n                        // Obtener detalles del intento\n                        var paramsAttempt = {\n                            wstoken: '10b97b49ec5c5119e48c566de5228f8f',\n                            wsfunction: 'mod_quiz_get_attempt_review',\n                            moodlewsrestformat: 'json',\n                            attemptid: attemptId,\n                            page: -1\n                        };\n\n                        var queryStringAttempt = $.param(paramsAttempt);\n                        var fullUrlAttempt = `${API_Moodle}?${queryStringAttempt}`;\n\n                        console.log('URL generada para mod_quiz_get_attempt_review:', fullUrlAttempt);\n\n                        $.ajax({\n                            url: fullUrlAttempt,\n                            method: 'GET',\n                            dataType: 'json',\n                            success: function (attemptData) {\n                                console.log('Respuesta de mod_quiz_get_attempt_review:', attemptData);\n\n                                if (attemptData.warnings && attemptData.warnings.length > 0) {\n                                    messagesDiv.append('<p><strong>Tutor:</strong> Advertencias: ' + attemptData.warnings[0].message + '</p>');\n                                    messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                    return;\n                                }\n\n                                if (!attemptData.questions || attemptData.questions.length === 0) {\n                                    messagesDiv.append('<p><strong>Tutor:</strong> No se encontraron preguntas en el intento.</p>');\n                                    messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                    return;\n                                }\n\n                                var preguntasIncorrectas = [];\n                                attemptData.questions.forEach(question => {\n                                    var preguntaMatch = question.html.match(/<div class=\"qtext\">(.*?)<\\/div>/is);\n                                    var pregunta = preguntaMatch ? preguntaMatch[1] : 'No se pudo extraer la pregunta';\n\n                                    var numeroPregunta = question.questionnumber || 'Desconocido';\n\n                                    var estado = question.status || 'Desconocido';\n                                    var estadoInterno = question.state || 'unknown';\n\n                                    var respuestaSeleccionadaMatch = question.html.match(/<input[^>]+checked=\"checked\"[^>]*>.*?<div class=\"flex-fill ms-1\">([^<]+)</is);\n                                    var respuestaSeleccionada = respuestaSeleccionadaMatch ? respuestaSeleccionadaMatch[1] : 'No se pudo extraer la respuesta seleccionada';\n\n                                    var respuestaCorrectaMatch = question.html.match(/<div class=\"rightanswer\">La respuesta correcta es: ([^<]+)</is);\n                                    var respuestaCorrecta = respuestaCorrectaMatch ? respuestaCorrectaMatch[1] : 'No se pudo extraer la respuesta correcta';\n\n                                    var opciones = [];\n                                    var opcionesMatches = question.html.matchAll(/<div class=\"flex-fill ms-1\">([^<]+)<\\/div>/gis);\n                                    for (let match of opcionesMatches) {\n                                        opciones.push(match[1]);\n                                    }\n\n                                    if (estado === 'Incorrecta' || estadoInterno === 'gradedwrong') {\n                                        preguntasIncorrectas.push({\n                                            numero: numeroPregunta,\n                                            pregunta: pregunta,\n                                            respuestaSeleccionada: respuestaSeleccionada,\n                                            respuestaCorrecta: respuestaCorrecta,\n                                            opciones: opciones,\n                                            estado: estado\n                                        });\n                                    }\n                                });\n\n                                actividadData.preguntasIncorrectas = preguntasIncorrectas;\n\n                                if (preguntasIncorrectas.length === 0) {\n                                    messagesDiv.append('<p><strong>Tutor:</strong> ¡Felicidades! Respondiste todas las preguntas correctamente.</p>');\n                                    messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                } else {\n                                    enviarDatosParaRetroalimentacion(actividadData);\n                                }\n                            },\n                            error: function (xhr, status, error) {\n                                console.log('Error al obtener datos del intento:', { xhr, status, error, responseText: xhr.responseText });\n                                messagesDiv.append('<p><strong>Tutor:</strong> Error al obtener datos del intento: ' + error + ' (Código: ' + xhr.status + ') - ' + (xhr.responseText || 'Sin detalles') + '</p>');\n                                messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                            }\n                        });\n                    },\n                    error: function (xhr, status, error) {\n                        console.log('Error al obtener intentos:', { xhr, status, error, responseText: xhr.responseText });\n                        messagesDiv.append('<p><strong>Tutor:</strong> Error al obtener intentos: ' + error + ' (Código: ' + xhr.status + ') - ' + (xhr.responseText || 'Sin detalles') + '</p>');\n                        messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                    }\n                });\n            }\n\n            /**\n             * Obtiene el contenido enviado por el estudiante para una tarea.\n             */\n            function obtenerDatosTarea(actividadData) {\n                var paramsAssignment = {\n                    wstoken: '10b97b49ec5c5119e48c566de5228f8f',\n                    wsfunction: 'mod_assign_get_assignments',\n                    moodlewsrestformat: 'json',\n                    courseids: [courseid]\n                };\n\n                var queryStringAssignment = $.param(paramsAssignment);\n                var fullUrlAssignment = `${API_Moodle}?${queryStringAssignment}`;\n\n                console.log('URL generada para mod_assign_get_assignments:', fullUrlAssignment);\n\n                $.ajax({\n                    url: fullUrlAssignment,\n                    method: 'GET',\n                    dataType: 'json',\n                    success: function (assignmentData) {\n                        console.log('Respuesta de mod_assign_get_assignments:', assignmentData);\n\n                        var assignment = null;\n                        if (assignmentData.courses && assignmentData.courses.length > 0) {\n                            assignmentData.courses.forEach(course => {\n                                course.assignments.forEach(assign => {\n                                    if (assign.cmid == cmid) {\n                                        assignment = assign;\n                                    }\n                                });\n                            });\n                        }\n\n                        if (!assignment) {\n                            messagesDiv.append('<p><strong>Tutor:</strong> No se encontró información sobre la tarea.</p>');\n                            messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                            return;\n                        }\n\n                        actividadData.title = assignment.name;\n                        actividadData.description = assignment.intro || 'Sin descripción disponible.';\n                        actividadData.introformat = assignment.introformat || 0;\n\n                        if (actividadData.introformat === 1) {\n                            var tempDiv = $('<div>').html(actividadData.description);\n                            actividadData.description = tempDiv.text();\n                        }\n\n                        var paramsSubmission = {\n                            wstoken: '10b97b49ec5c5119e48c566de5228f8f',\n                            wsfunction: 'mod_assign_get_submissions',\n                            moodlewsrestformat: 'json',\n                            assignmentids: [actividadData.id]\n                        };\n\n                        var queryStringSubmission = $.param(paramsSubmission);\n                        var fullUrlSubmission = `${API_Moodle}?${queryStringSubmission}`;\n\n                        console.log('URL generada para mod_assign_get_submissions:', fullUrlSubmission);\n\n                        $.ajax({\n                            url: fullUrlSubmission,\n                            method: 'GET',\n                            dataType: 'json',\n                            success: function (submissionData) {\n                                console.log('Respuesta de mod_assign_get_submissions:', submissionData);\n\n                                var entregaEstudiante = null;\n                                if (submissionData.assignments && submissionData.assignments.length > 0) {\n                                    var submissions = submissionData.assignments[0].submissions;\n                                    entregaEstudiante = submissions.find(sub => sub.userid == userid);\n                                }\n\n                                if (!entregaEstudiante) {\n                                    actividadData.status = 'pendiente';\n                                    actividadData.submissionStatus = 'No entregada';\n                                    enviarDatosParaRetroalimentacion(actividadData);\n                                    return;\n                                }\n\n                                actividadData.status = entregaEstudiante.status || 'entregada';\n                                actividadData.submissionStatus = entregaEstudiante.status === 'submitted' ? 'Entregada' : 'Borrador';\n\n                                if (actividadData.status === 'submitted') {\n                                    if (actividadData.grade > 0) {\n                                        actividadData.status = 'calificada';\n                                    } else {\n                                        actividadData.status = 'entregada_no_calificada';\n                                    }\n                                }\n\n                                enviarDatosParaRetroalimentacion(actividadData);\n                            },\n                            error: function (xhr, status, error) {\n                                console.log('Error al obtener entregas:', { xhr, status, error });\n                                messagesDiv.append('<p><strong>Tutor:</strong> Error al obtener entregas: ' + error + '</p>');\n                                messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                            }\n                        });\n                    },\n                    error: function (xhr, status, error) {\n                        console.log('Error al obtener datos de la tarea:', { xhr, status, error });\n                        messagesDiv.append('<p><strong>Tutor:</strong> Error al obtener datos de la tarea: ' + error + '</p>');\n                        messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                    }\n                });\n            }\n\n            /**\n             * Envía los datos a la API para obtener retroalimentación detallada.\n             */\n            function enviarDatosParaRetroalimentacion(actividadData) {\n                var instruccionRetro = `\n                    Actúa como un tutor virtual especializado en la enseñanza de Análisis y Diseño de Software. Tu tarea es proporcionar retroalimentación educativa a un estudiante basada en el estado de una tarea. Recibirás los datos en el formato: \n                    {\n                        \"userid\": number, \n                        \"name\": string, \n                        \"grade\": number, \n                        \"actividad\": string, \n                        \"title\": string, \n                        \"description\": string, \n                        \"status\": string (\"pendiente\", \"entregada_no_calificada\", \"calificada\"), \n                        \"submissionStatus\": string, \n                        \"feedback\": string\n                    }\n                    \n                    - Si el estado es \"pendiente\", analiza el título y la descripción de la tarea y proporciona recomendaciones específicas para que el estudiante la complete exitosamente.\n                    - Si el estado es \"entregada_no_calificada\", informa al estudiante que su tarea está en proceso de evaluación y sugiere cómo puede prepararse para futuras tareas similares.\n                    - Si el estado es \"calificada\", analiza la calificación y la retroalimentación del profesor para proporcionar retroalimentación adicional. Explica qué hizo bien el estudiante, qué puede mejorar, y sugiere pasos específicos para futuras tareas.\n                    \n                    Devuelve la retroalimentación en formato texto, en español, con un tono profesional y motivador.\n                `;\n\n                messagesDiv.append('<p><strong>Debug:</strong> Enviando datos a la API para retroalimentación...</p>');\n                messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n\n                if (actividadData.preguntasIncorrectas && actividadData.preguntasIncorrectas.length > 0) {\n                    if (actividadData.remainingAttempts > 0) {\n                        // Retroalimentación de apoyo para intentos restantes\n                        var promptApoyo = `\n                            Eres un tutor virtual especializado en Análisis y Diseño de Software. Un estudiante ha respondido incorrectamente algunas preguntas en un cuestionario, pero aún tiene ${actividadData.remainingAttempts} intento(s) restante(s). Proporciona retroalimentación de apoyo que identifique los temas principales de las preguntas incorrectas y ofrezca consejos generales para mejorar, sin revelar las respuestas correctas ni detalles específicos de las preguntas.\n\n                            Preguntas incorrectas:\n                            ${actividadData.preguntasIncorrectas.map((pregunta, index) => `\n                            Pregunta ${index + 1} (Número ${pregunta.numero}): ${pregunta.pregunta}\n                            `).join('\\n')}\n\n                            Identifica los temas principales (por ejemplo, modelado UML, casos de uso, diagramas de clases) y sugiere cómo mejorar en ellos (máximo 150 palabras). Comienza con \"¡No te preocupes, estás progresando!\" y usa un tono motivador. No menciones respuestas correctas ni hagas referencia a libros o materiales externos.\n                        `;\n\n                        console.log('Prompt para retroalimentación de apoyo:', promptApoyo);\n\n                        $.ajax({\n                            url: API_tutor, // Usar variable para endpoint de generación\n                            method: 'POST',\n                            contentType: 'application/json',\n                            data: JSON.stringify({\n                                instruccion: \"Proporciona retroalimentación de apoyo basada en los temas de las preguntas incorrectas.\",\n                                entrada: promptApoyo,\n                                max_nuevos_tokens: 256\n                            }),\n                            success: function (response) {\n                                console.log('Respuesta de la API /generar (apoyo):', response);\n\n                                if (response.respuesta) {\n                                    var retroalimentacionFormateada = response.respuesta.replace(/\\n/g, '<br>');\n                                    var mensaje = `<p><strong>Tutor:</strong><br>${retroalimentacionFormateada}<br>Tienes ${actividadData.remainingAttempts} intento(s) restante(s). ¡Sigue practicando!</p>`;\n                                    // messagesDiv.append(mensaje);\n                                    mostrarTextoAnimado(messagesDiv, mensaje);\n                                    messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                } else {\n                                    messagesDiv.append('<p><strong>Tutor:</strong> Error: No se pudo generar la retroalimentación de apoyo.</p>');\n                                    messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                }\n                            },\n                            error: function (xhr, status, error) {\n                                console.log('Error al obtener retroalimentación de apoyo:', { xhr, status, error, responseText: xhr.responseText });\n                                messagesDiv.append('<p><strong>Tutor:</strong> Error al obtener retroalimentación de apoyo: ' + error + ' (Código: ' + xhr.status + ') - ' + (xhr.responseText || 'Sin detalles') + '</p>');\n                                messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                            }\n                        });\n                    } else {\n                        // Retroalimentación detallada y actividad de refuerzo cuando no hay intentos\n                        var promesas = actividadData.preguntasIncorrectas.map(pregunta => {\n                            var prompt = `\n                                Eres un tutor virtual especializado en Análisis y Diseño de Software. Explica por qué la respuesta correcta es adecuada para la siguiente pregunta de un cuestionario, considerando el contexto y las opciones disponibles.\n\n                                **Pregunta**: ${pregunta.pregunta}\n                                **Respuesta seleccionada**: ${pregunta.respuestaSeleccionada} (incorrecta)\n                                **Respuesta correcta**: ${pregunta.respuestaCorrecta}\n                                **Opciones**: ${pregunta.opciones.join(', ')}\n\n                                Explica por qué \"${pregunta.respuestaCorrecta}\" es correcta y por qué \"${pregunta.respuestaSeleccionada}\" no lo es. Usa un lenguaje claro, educativo y motivador (máximo 100 palabras).\n                            `;\n\n                            console.log('Prompt para retroalimentación detallada:', prompt);\n\n                            return $.ajax({\n                                url: API_tutor, // Usar variable para endpoint de generación\n                                method: 'POST',\n                                contentType: 'application/json',\n                                data: JSON.stringify({\n                                    instruccion: \"Proporciona una explicación clara y detallada.\",\n                                    entrada: prompt,\n                                    max_nuevos_tokens: 256\n                                }),\n                                success: function (response) {\n                                    console.log('Respuesta de la API /generar:', response);\n\n                                    if (response.respuesta) {\n                                        var mensaje = `<p><strong>Tutor:</strong> Pregunta ${pregunta.numero}: \"${pregunta.pregunta}\":<br>` +\n                                            `<strong>Respondiste:</strong> \"${pregunta.respuestaSeleccionada}\" (Incorrecta).<br>` +\n                                            `<strong>Correcta:</strong> \"${pregunta.respuestaCorrecta}\".<br>` +\n                                            `<strong>Explicación:</strong> ${response.respuesta}</p>`;\n                                        // messagesDiv.append(mensaje);\n                                        mostrarTextoAnimado(messagesDiv, mensaje);\n                                        messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                    }\n                                },\n                                error: function (xhr, status, error) {\n                                    console.log('Error al obtener retroalimentación detallada:', { xhr, status, error, responseText: xhr.responseText });\n                                    messagesDiv.append('<p><strong>Tutor:</strong> Error al obtener retroalimentación para la Pregunta ${pregunta.numero}: ' + error + ' (Código: ' + xhr.status + ') - ' + (xhr.responseText || 'Sin detalles') + '</p>');\n                                    messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                }\n                            });\n                        });\n\n                        Promise.all(promesas).then(() => {\n                            console.log('Todas las retroalimentaciones detalladas procesadas.');\n\n                            if (actividadData.grade < 7) {\n                                var promptRefuerzo = `\n                                    Eres un tutor virtual especializado en Análisis y Diseño de Software. Un estudiante obtuvo una calificación de ${actividadData.grade} en un cuestionario (escala 0-10). Propón una actividad de refuerzo para mejorar en los temas de los preguntas incorrectas:\n\n                                    ${actividadData.preguntasIncorrectas.map((pregunta, index) => `\n                                    Pregunta ${index + 1} (Número ${pregunta.numero}): ${pregunta.pregunta}\n                                    Respuesta seleccionada: ${pregunta.respuestaSeleccionada} (incorrecta)\n                                    Respuesta correcta: ${pregunta.respuestaCorrecta}\n                                    `).join('\\n')}\n\n                                    Identifica los temas de los errores y propone una actividad práctica y breve (máximo 200 palabras) que aborde todos los temas. Comienza con \"¡Vamos a reforzar tus conocimientos!\" and usa un tono motivador. No menciones libros ni materiales externos.\n                                `;\n\n                                console.log('Prompt para actividad de refuerzo:', promptRefuerzo);\n\n                                $.ajax({\n                                    url: API_tutor, // Usar variable para endpoint de generación\n                                    method: 'POST',\n                                    contentType: 'application/json',\n                                    data: JSON.stringify({\n                                        instruccion: \"Proporciona una actividad de refuerzo basada en los errores del estudiante.\",\n                                        entrada: promptRefuerzo,\n                                        max_nuevos_tokens: 256\n                                    }),\n                                    success: function (response) {\n                                        console.log('Respuesta de la API /generar (refuerzo):', response);\n\n                                        if (response.respuesta) {\n                                            var actividadFormateada = response.respuesta.replace(/\\n/g, '<br>');\n                                            var mensaje = `<p><strong>Tutor:</strong><br><strong>Actividad de refuerzo:</strong><br>${actividadFormateada}</p>`;\n                                            // messagesDiv.append(mensaje);\n                                            mostrarTextoAnimado(messagesDiv, mensaje);\n                                            messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                        } else {\n                                            messagesDiv.append('<p><strong>Tutor:</strong> Error: No se pudo generar la actividad de refuerzo.</p>');\n                                            messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                        }\n                                    },\n                                    error: function (xhr, status, error) {\n                                        console.log('Error al obtener actividad de refuerzo:', { xhr, status, error, responseText: xhr.responseText });\n                                        messagesDiv.append('<p><strong>Tutor:</strong> Error al generar actividad de refuerzo: ' + error + ' (Código: ' + xhr.status + ') - ' + (xhr.responseText || 'Sin detalles') + '</p>');\n                                        messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                    }\n                                });\n                            }\n                        }).catch(error => {\n                            console.log('Error al procesar retroalimentaciones detalladas:', error);\n                            messagesDiv.append('<p><strong>Tutor:</strong> Error al procesar retroalimentaciones: ' + error + '</p>');\n                            messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                        });\n                    }\n                } else {\n                    // Retroalimentación para tareas\n                    $.ajax({\n                        url: API_tutor, // Usar variable para endpoint de generación\n                        method: 'POST',\n                        contentType: 'application/json',\n                        data: JSON.stringify({\n                            instruccion: instruccionRetro,\n                            entrada: JSON.stringify(actividadData),\n                            max_nuevos_tokens: 256\n                        }),\n                        success: function (response) {\n                            console.log('Respuesta de la API /generar (tarea):', response);\n\n                            if (response.respuesta) {\n                                var retroalimentacionFormateada = response.respuesta.replace(/\\n/g, '<br>');\n                                var mensaje = `<p><strong>Tutor:</strong> Hola ${actividadData.name}, aquí tienes la retroalimentación para \"${actividadData.actividad}\":<br>${retroalimentacionFormateada}</p>`;\n                                // messagesDiv.append(mensaje);\n                                mostrarTextoAnimado(messagesDiv, mensaje);\n                                messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                            } else {\n                                messagesDiv.append('<p><strong>Tutor:</strong> Error: Respuesta inválida de la API.</p>');\n                                messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                            }\n                        },\n                        error: function (xhr, status, error) {\n                            console.log('Error al obtener retroalimentación de tarea:', { xhr, status, error, responseText: xhr.responseText });\n                            messagesDiv.append('<p><strong>Tutor:</strong> Error al obtener retroalimentación: ' + error + ' (Código: ' + xhr.status + ') - ' + (xhr.responseText || 'Sin detalles') + '</p>');\n                            messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                        }\n                    });\n                }\n            }\n\n            // Evento click para el botón, con control de cooldown\n            if (requestBtn.length) {\n                requestBtn.on('click', function () {\n                    if (cooldown) {\n                        messagesDiv.append('<p><strong>Espera unos segundos antes de volver a solicitar retroalimentación.</strong></p>');\n                        messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                        return;\n                    }\n                    cooldown = true;\n                    requestBtn.prop('disabled', true);\n                    obtenerRetroalimentacion();\n                    setTimeout(function () {\n                        cooldown = false;\n                        requestBtn.prop('disabled', false);\n                    }, cooldownTime);\n                });\n            }\n\n            // Eliminar la llamada automática:\n            // obtenerRetroalimentacion();\n        }\n    };\n});"],"names":["define","$","API_tutor","API_Moodle","init","userid","courseid","cmid","modname","messagesDiv","requestBtn","cooldown","mostrarTextoAnimado","element","html","velocidad","arguments","length","undefined","append","target","find","last","i","partes","split","escribir","setTimeout","removeClass","obtenerRetroalimentacion","params","wstoken","wsfunction","moodlewsrestformat","queryString","param","fullUrl","console","log","scrollTop","scrollHeight","ajax","url","method","dataType","success","data","actividadData","usergrades","forEach","user","gradeitems","item","grade","graderaw","name","userfullname","actividad","itemname","feedback","feedbackformat","tempDiv","text","paramsContext","queryStringContext","fullUrlContext","contextData","cm","instance","id","quizid","status","attempts","attemptId","maxAttempts","attemptsMade","remainingAttempts","paramsAttempt","attemptid","page","queryStringAttempt","fullUrlAttempt","attemptData","warnings","message","questions","preguntasIncorrectas","question","preguntaMatch","match","pregunta","numeroPregunta","questionnumber","estado","estadoInterno","state","respuestaSeleccionadaMatch","respuestaSeleccionada","respuestaCorrectaMatch","respuestaCorrecta","opciones","opcionesMatches","matchAll","push","numero","enviarDatosParaRetroalimentacion","error","xhr","responseText","obtenerDatosCuestionario","paramsAssignment","courseids","queryStringAssignment","fullUrlAssignment","assignmentData","assignment","courses","course","assignments","assign","title","description","intro","introformat","paramsSubmission","assignmentids","queryStringSubmission","fullUrlSubmission","submissionData","entregaEstudiante","submissions","sub","submissionStatus","obtenerDatosTarea","promptApoyo","map","index","join","contentType","JSON","stringify","instruccion","entrada","max_nuevos_tokens","response","respuesta","mensaje","replace","promesas","prompt","Promise","all","then","promptRefuerzo","actividadFormateada","catch","retroalimentacionFormateada","on","prop"],"mappings":"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"}